
==================== FINAL INTERFACE ====================
2016-05-24 00:31:34.255461 UTC

interface main@main:Handlers [orphan module] 7103
  interface hash: e1b01514afdf174eb2f7a7c6772e088d
  ABI hash: dcfe2c5b824ba36cd00c6305ed591bd7
  export-list hash: af1ad6f8b71c0d5382e326a9a0d51adf
  orphan hash: 1ac62b4632aa94b0ca302f3fe54a5c97
  flag hash: 002b4a2b1e8bd7f74f446f3277c2cd0a
  sig of: Nothing
  used TH splices: True
  where
exports:
  Handlers.dptos
  Handlers.formDepto
  Handlers.formPessoa
  Handlers.getCadastroR
  Handlers.getDeptoR
  Handlers.getListarR
  Handlers.getPessoaR
  Handlers.postCadastroR
  Handlers.postDeptoR
  Handlers.postPessoaR
  Handlers.widgetForm
module dependencies: Foundation Import
package dependencies: aeson-compat-0.3.3.0@aeson_0xjzVmng3iDFSqREKtljlA
                      aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv
                      ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      appar-0.1.4@appar_0ov5bpGH3STIB4U7WU8MFi
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3
                      auto-update-0.1.4@autou_Fnqbq5K41573zil7J3s62I base-4.8.2.0
                      base64-bytestring-1.0.0.1@base6_AkCk8zInckjJsyQ4AIFHPN
                      base-compat-0.9.1@basec_3Zy8UsyHmBEEwbReR8x1KT
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      blaze-html-0.8.1.1@blaze_1fCoF4onMJE2jDLBViwynk
                      blaze-builder-0.4.0.2@blaze_5LQurmvTy7l9rPlWgPlNE4
                      blaze-markup-0.7.0.3@blaze_JGtgJgx8yqB3DdKuU3sbgD
                      byteable-0.1.1@bytea_38yjJsjDRm9KusCn8Yo4aB
                      byteorder-1.0.4@byteo_6yQGE3rJo3bBqr3CFoBQ27
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      case-insensitive-1.2.0.6@casei_8joO9kPGMysIcGsv22FmhM
                      cereal-0.5.1.0@cerea_843xOxvPj94HAJ9SD4EJuq
                      cipher-aes-0.2.11@ciphe_8XNwNKI71EdCLNQ4WGdMQq
                      clientsession-0.9.1.1@clien_5voyFsgo1EG4Zcy2KTreld
                      conduit-extra-1.1.13.1@condu_1LMl3SW4LtrHkXhIuAcim5
                      conduit-1.2.6.6@condu_JdeDIbfFlF2LFouNeugyxh
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      cookie-0.4.2@cooki_HgYmE0LnTLQI3ZHrNmxIUf
                      cprng-aes-0.6.1@cprng_FqpwhJtWO8g27pB5PJZtIq
                      crypto-api-0.13.2@crypt_2BEYKdRP8nrKGHynW1FWqA
                      crypto-random-0.0.9@crypt_7BiCOK9v78J36YeClUc9KE
                      crypto-cipher-types-0.0.9@crypt_AkbdiYWeXYI5D4jAOMIXve
                      css-text-0.1.2.1@csste_DCmJgQlbndx5J1dp3gjSY0
                      data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe
                      data-default-0.5.3@datad_DLQPsKM7BNMFfKH45X8LEe
                      data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk
                      data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY
                      data-default-class-0.0.1@datad_K91y8NcZUJI9yaBI61rgdD
                      data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      directory-1.2.2.0@direc_0hFG6ZxK1nk4zsyOqbNHfm
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      easy-file-0.2.1@easyf_IjQ6MMskJyDEpOwcfCdF0G
                      email-validate-2.2.0@email_852PUaAoFuMCJCuSp1iWYg
                      entropy-0.3.7@entro_7gYJ61Ci0NNBp8LB4CGmrG
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      fast-logger-2.4.6@fastl_KNzHEmV4CAC3sAdPGCavvx
                      filepath-1.4.0.0@filep_Ey7a1in9roBAE8bUFJ5R9m ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I
                      http2-1.4.5@http2_DoxR3dWy5TOCdpHywL3J3q
                      http-api-data-0.2.2@httpa_3kiLcpdXTUe4CYRpIoinpP
                      http-date-0.0.6.1@httpd_5DCnWjYhsQa9SYTqbDecLX
                      http-types-0.9@httpt_GVuxyBdW2yt88cWrjZfRWC integer-gmp-1.0.0.0
                      iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT
                      lifted-base-0.2.3.6@lifte_DoOvgrTvmEtENHs0ypaZTR
                      memory-0.11@memor_0EiEBIg44i8KGjAeoKnPDs
                      mmorph-1.0.6@mmorp_42KUkOfzC6q3qCtAMiSHam
                      monad-logger-0.3.18@monad_4zFmsKEb02q80NkYIgzdSA
                      monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      network-uri-2.6.1.0@netwo_8hCRgBDYvZA6nRJCSPBXws
                      network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      parsec-3.1.11@parse_AtBt9uDOS2NCyWnucTHV3y
                      path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO
                      persistent-template-2.1.8.1@persi_1tD6A5SgofA9bCUT3OrmYW
                      persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h
                      persistent-postgresql-2.2.2@persi_I35172shMYp78kjIUv4icT
                      postgresql-libpq-0.9.1.1@postg_6f9D1As2FCe0fjZpXXvHvS
                      postgresql-simple-0.5.1.3@postg_9hhNYLG1RxhIG50wjKKMiI
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      psqueues-0.2.2.1@psque_AvLcbKUIB1yCm8wZoS0YR7
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      resource-pool-0.2.3.2@resou_BPzNUl5kJsI1qo7V284Tgq
                      resourcet-1.1.7.4@resou_HqDlSpmGRphG5PMbskXVNU
                      safe-0.3.9@safe_Eus5OohxO2XHvdWxKAmhFS
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      securemem-0.1.9@secur_ArobkR9k7uwJiSXmFUrDYT
                      semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0
                      shakespeare-2.0.8.2@shake_3RhVQT7BnaCFlMCPbnICF4
                      silently-1.2.5@silen_5nVdOe0bUXfLPEbxHJT4m4
                      simple-sendfile-0.2.23@simpl_4cgd7qT6IWhK1oBB4nw9KS
                      skein-1.0.9.4@skein_Er8QdQfWtp79PgFByyaiMF
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      stm-chans-3.0.0.4@stmch_4ac5OLG4E0w1rpuIDCribD
                      streaming-commons-0.1.15.5@strea_EmmPiWycOZRDBDTh9xaABj
                      stringsearch-0.3.6.6@strin_CAOAc0sCfAC9gi7YClo2KY
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6
                      tagsoup-0.13.10@tagso_3rEkgaaJ74Z8iYKiJ2gVLz
                      template-haskell-2.10.0.0 text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      time-locale-compat-0.1.1.1@timel_Ciz7M1U3da73rRwCjRF3Np
                      transformers-base-0.4.4@trans_74WedXVmfaHHDJItmBRTVp
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unix-compat-0.4.1.4@unixc_Km8uiabmElX5mrb8D4Fywe
                      unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      utf8-string-1.0.1.1@utf8s_L8eKHa7Iv9q7FVKUYW6u4b
                      uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr
                      vault-0.3.0.6@vault_8aId1RjvIBs9AcRd6Dlytd
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
                      wai-3.2.1@wai_0sX35KG3ls0DbfkAiL2KUt
                      wai-extra-3.0.15.1@waiex_EWHXUlMsXiT8I0K03tLj8q
                      wai-logger-2.2.7@wailo_1X00Br1oGNaGIwtKEg2Oq9
                      warp-3.2.2@warp_BFfPE5siJYR7AwyKWfQUnI
                      word8-0.1.2@word8_6yKBsGbmsbLB2UCORShr75
                      xss-sanitize-0.3.5.7@xsssa_AUbijHu4zP0D8gM2KdDi0S
                      yesod-persistent-1.4.0.5@yesod_3pJn032f2j34oA1FGRgBps
                      yesod-form-1.4.7.1@yesod_5qqGWLvJ7hT5L1p57VmswX
                      yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK
                      yesod-1.4.3@yesod_FpHh22gomk01kN3v1wP7Ls
                      zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu
orphans: aeson-compat-0.3.3.0@aeson_0xjzVmng3iDFSqREKtljlA:Data.Aeson.Compat
         aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Instances
         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         crypto-api-0.13.2@crypt_2BEYKdRP8nrKGHynW1FWqA:Crypto.Classes
         data-default-instances-base-0.0.1@datad_Bh5w1rt638k3gekgUnZ9Qe:Data.Default.Instances.Base
         data-default-instances-dlist-0.0.1@datad_IV2dTGx3Pj09NowR0FWGzk:Data.Default.Instances.DList
         data-default-instances-containers-0.0.1@datad_IvTKAI579b047LLJfQOYbY:Data.Default.Instances.Containers
         data-default-instances-old-locale-0.0.1@datad_LQTewb1b5hK22W4h2rIWVQ:Data.Default.Instances.OldLocale
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket
         network-2.6.2.1@netwo_A6pE0dLgMEk2GtUa1JtTJQ:Network.Socket.Types
         persistent-template-2.1.8.1@persi_1tD6A5SgofA9bCUT3OrmYW:Database.Persist.TH
         persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Sql.Orphan.PersistQuery
         persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Sql.Orphan.PersistStore
         persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Sql.Orphan.PersistUnique
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         unix-time-0.3.6@unixt_4DXmhADld9WFju1Q636Hdx:Data.UnixTime.Diff
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         email-validate-2.2.0@email_852PUaAoFuMCJCuSp1iWYg:Text.Email.Parser
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Addr
                         iproute-1.7.0@iprou_51qGM7UdLbAGjwdVd1zynT:Data.IP.Range
                         main@main:Foundation
                         monad-logger-0.3.18@monad_4zFmsKEb02q80NkYIgzdSA:Control.Monad.Logger
                         monad-control-1.0.1.0@monad_7Tqv3C2ASZP4J7swGaIkqS:Control.Monad.Trans.Control
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         network-uri-2.6.1.0@netwo_8hCRgBDYvZA6nRJCSPBXws:Network.URI
                         persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Class.PersistConfig
                         persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Sql.Orphan.PersistStore
                         persistent-postgresql-2.2.2@persi_I35172shMYp78kjIUv4icT:Database.Persist.Postgresql
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         resourcet-1.1.7.4@resou_HqDlSpmGRphG5PMbskXVNU:Control.Monad.Trans.Resource.Internal
                         semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0:Data.List.NonEmpty
                         semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0:Data.Semigroup
                         shakespeare-2.0.8.2@shake_3RhVQT7BnaCFlMCPbnICF4:Text.Css
                         shakespeare-2.0.8.2@shake_3RhVQT7BnaCFlMCPbnICF4:Text.Shakespeare
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal
                         uuid-types-1.0.3@uuidt_1jYi9RR4Gf08rGU1w6xxPr:Data.UUID.Types.Internal.Builder
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
                         yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Class.Handler
                         yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Internal.LiteApp
                         yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Types
                         zlib-0.6.1.1@zlib_7LjT7TSHX8U3VTy3t378Vu:Codec.Compression.Zlib.Stream
import  -/  base-4.8.2.0:Control.Applicative a8ebf5ad4932b411ad7725da68be9801
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  blaze-html-0.8.1.1@blaze_1fCoF4onMJE2jDLBViwynk:Text.Blaze.Html dcd84e6a1095a3bbd6a32bcf6f207e70
import  -/  blaze-markup-0.7.0.3@blaze_JGtgJgx8yqB3DdKuU3sbgD:Text.Blaze.Internal 695ee1760d4a7ba45b41439e146f60cb
import  -/  Foundation ac0bbfa30c9ef75e4f0d5a57cdca5229
  exports: 59026b74113c2151221c504eeaa0bbd7
  CadastroR 5b1f99af6d6006d3c644bd06dcc02405
  Departamento 2840775385a6042a119cd0576b9b8ae7
  Departamento 29652110a368bc52c6680a34f7f4f61e
  DepartamentoNome b644ff87e064f4f3e694787f815cd7e1
  DeptoR 85040fe6bf03a8b3089bbd4effc300fa
  Form 6c9f2834badcaeae94d3fd8a901b15f8
  Handler 5db46fb71cbc43d34e7f019c79383d0f
  ListarR 7d7d46514bafe730da342e6d5d58288a
  Pessoa 5668ab29f5b76fdf8ed98f1f6b0fbb2b
  Pessoa bb8c2b75cdaa824d100562857e344a7c
  PessoaId c2691260d06b0c4c478999961e2226cb
  PessoaNome 7383bf0d76f65712555d8e15d6791a55
  PessoaR 87dc47b6b9014f2406f75bdc1ab24b07
  Sitio e01eaee51ff008da5d619350567ffd21
  Widget c33486de35044179bb1c3894618c9db3
  departamentoNome 1dca1e87506c5dab045be77408e6aa98
  departamentoSigla 076ee04a56bade1ee981d3f222f5da5a
  pessoaDeptoid 20855331d55f70b07bca2d3470c81183
  pessoaIdade 847dd3c1529242f3dfee96653af0305f
  pessoaNome 2ab7b1b2b8c2c537fde1ae3e3d0d2338
  pessoaSalario 03a55f4bf8367c26f8dea4c3e0535804
import  -/  Import da994c46380f3625b66704653b17b6d5
  exports: 3f81b358abbdd755233af520aa5259f2
  pRoutes 41a9aa9f9d45ffb1cb871a96e4a2daad
import  -/  monad-logger-0.3.18@monad_4zFmsKEb02q80NkYIgzdSA:Control.Monad.Logger 182fd28eab575faa0f8bc2038857c61b
import  -/  path-pieces-0.2.1@pathp_4qW9xznk5mC6aJZVVgmWEO:Web.PathPieces e7a246921fcfef213af85b6de92fc54c
import  -/  persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Class.PersistEntity 9b498f62468214b5ccb2c732d79401f1
import  -/  persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Class.PersistQuery 383e5f0b635beadc9b9d03d3bb9bb054
import  -/  persistent-2.2.4.1@persi_36FCcNA9a3h9UOROG7VC2h:Database.Persist.Class.PersistStore 6f0b5a2a3e5a383bcd0d5e29740fa25c
import  -/  persistent-postgresql-2.2.2@persi_I35172shMYp78kjIUv4icT:Database.Persist.Postgresql 6d931a7480e1dc213a4f93417db9666f
import  -/  shakespeare-2.0.8.2@shake_3RhVQT7BnaCFlMCPbnICF4:Text.Css 195d9e4340cbc9283be83c3d457203a8
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 677c532e2dd56476a11a0a8a53880ce7
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Internal d9b6b9a9dd535595b612aea5738b7466
import  -/  wai-3.2.1@wai_0sX35KG3ls0DbfkAiL2KUt:Network.Wai.Internal f1a685b41c2884d9d2779e47213c3c44
import  -/  yesod-persistent-1.4.0.5@yesod_3pJn032f2j34oA1FGRgBps:Yesod.Persist.Core 33c6498013eb921166be4018199adcf7
import  -/  yesod-form-1.4.7.1@yesod_5qqGWLvJ7hT5L1p57VmswX:Yesod.Form.Fields 8ee080fa1156e9c26823301ace7c46fb
import  -/  yesod-form-1.4.7.1@yesod_5qqGWLvJ7hT5L1p57VmswX:Yesod.Form.Functions b1a03885c46811978c003c95d1e10b36
import  -/  yesod-form-1.4.7.1@yesod_5qqGWLvJ7hT5L1p57VmswX:Yesod.Form.Types aa228a55c7baf7e803ef6b649f63a84b
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Class.Dispatch c1207f87922eeecef68ba7abad801908
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Class.Yesod 1c744b066587cb8f7874ba07bae90fd4
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Handler fac0e317c98d2b63fb769a5a2c15d3f5
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Internal.Run 7f2700d3fad159393f3cd5d14c7a5f40
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Internal.TH 3865f83822d454959baf81477309f335
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Core.Widget fa3a2d463e15459dc3a1bbc6cb38a71f
import  -/  yesod-core-1.4.20.2@yesod_B7Rbgnw3aXNHuiCFI7aEeK:Yesod.Routes.Class 16609b7f14714794b014118bed712039
import  -/  yesod-1.4.3@yesod_FpHh22gomk01kN3v1wP7Ls:Yesod 318d44ba081746b664dcf909b019ac81
addDependentFile "/home/ubuntu/.stack/programs/x86_64-linux/ghc-7.10.3/lib/ghc-7.10.3/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-linux/Cabal-1.22.5.0/build/autogen/cabal_macros.h"
addDependentFile "/usr/include/stdc-predef.h"
dd430dae3ea752ad549936a219070ccf
  $fYesodDispatchSitio ::
    Yesod.Core.Class.Dispatch.YesodDispatch Foundation.Sitio
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Foundation.Sitio
                  Foundation.$fYesodSitio
                  Handlers.$fYesodDispatchSitio_$cyesodDispatch -}
c1b717be28c0b2e565fad3b005157188
  $fYesodDispatchSitio_$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.Sitio
    -> Network.Wai.Application
  {- Arity: 2,
     Strictness: <L,U(U,U,U,U,C(U(U,1*U(U,U,U))))><S(LLLLLLLSLLLLLLLL),1*U(U(U,U,U,U),U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Yesod.Core.Types.YesodRunnerEnv Foundation.Sitio
                   w1 :: Network.Wai.Internal.Request ->
                 case w1 of ww { Network.Wai.Internal.Request ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ->
                 Handlers.$w$cyesodDispatch
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16 }) -}
2e2711ef268e41f6c0876fc83815e50a
  $s$fApplicativeWidgetT ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fApplicativeWidgetT1
                  Handlers.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
                  (Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fApplicativeWidgetT1
                     GHC.Base.$fMonadIO)
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
                  Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* -}
5076b6189ad1d8ea77c75d10b3328504
  $s$fApplicativeWidgetT1 ::
    GHC.Base.Functor
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Yesod.Form.Fields.$s$fFunctorWidgetT @ Foundation.Sitio) -}
b411834158b3dcfac2843031da44c91c
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*> ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO b
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a66
                   @ b
                   eta :: Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a66
                   eta1 :: Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   Handlers.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ b
                   (Yesod.Form.Fields.$s$fFunctorWidgetT_$s$fFunctorWidgetT_$c<$
                      @ Foundation.Sitio
                      @ (b -> b)
                      @ a66
                      (GHC.Base.id @ b)
                      eta)
                   eta1) -}
3925717f3e7f95091fc9fac692e5a991
  $s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<* ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO b
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a66
                   @ b
                   eta :: Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a66
                   eta1 :: Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO b ->
                 Yesod.Core.Types.$fApplicativeWidgetT_$c<*>
                   @ Foundation.Sitio
                   @ GHC.Types.IO
                   Handlers.$s$fApplicativeWidgetT1
                   GHC.Base.$fMonadIO
                   @ b
                   @ a66
                   (Yesod.Core.Types.$fFunctorWidgetT_$cfmap
                      @ Foundation.Sitio
                      @ GHC.Types.IO
                      GHC.Base.$fMonadIO
                      @ a66
                      @ (b -> a66)
                      (GHC.Base.const @ a66 @ b)
                      eta)
                   eta1) -}
585d86792e7a36ff471adb8c40d0434e
  $s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn ::
    a -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a66
                   a67 :: a66
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (GHC.Base.returnIO
                    @ (a66,
                       Yesod.Core.Types.GWData
                         (Yesod.Routes.Class.Route Foundation.Sitio))
                    (a67,
                     Yesod.Core.Types.$fApplicativeWidgetT_$cmempty
                       @ (Yesod.Routes.Class.Route Foundation.Sitio)))
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <(a66,
                        Yesod.Core.Types.GWData
                          (Yesod.Routes.Class.Route Foundation.Sitio))>_R)
                   eta1)
                  `cast`
                (forall a66.
                 <a66>_R
                 ->_R Trans
                          (<Yesod.Core.Types.HandlerData
                              Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                           ->_R Sym (GHC.Types.NTCo:IO[0]
                                         <(a66,
                                           Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route Foundation.Sitio))>_R))
                          (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N <a66>_N))) -}
35b05a4e6e2590df005deddf701d572b
  $s$fMonadBasebWidgetT ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GHC.Types.IO
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  GHC.Base.$fApplicativeIO
                  Handlers.$s$fMonadBasebWidgetT3
                  GHC.Base.$fMonadIO
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadBasebWidgetT_$cliftBase
                     @ GHC.Types.IO
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     GHC.Base.$fApplicativeIO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.Base.$fMonadBaseIOIO) -}
7146da68b01cacc311afd416c1af26fe
  $s$fMonadBasebWidgetT1 ::
    GHC.Base.Monad
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebWidgetT_$s$fMonadWidgetT -}
cf1e192cc8622cf63b8f9ada40175974
  $s$fMonadBasebWidgetT2 ::
    GHC.Base.String
    -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a
  {- Arity: 1, Strictness: <B,U>b,
     Unfolding: InlineRule (1, True, True)
                (\ @ a66 eta :: [GHC.Types.Char] ->
                 GHC.Err.error
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO a66)
                   eta) -}
5470b762da1aed2ce46e281d7f891fb4
  $s$fMonadBasebWidgetT3 ::
    GHC.Base.Applicative
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fApplicativeWidgetT -}
604351f40f3c49d9bb3968762c39c217
  $s$fMonadBasebWidgetT_$s$fMonadWidgetT ::
    GHC.Base.Monad
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT3
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>=
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  (Yesod.Core.Types.$fMonadWidgetT_$c>>
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT3
                     GHC.Base.$fMonadIO)
                  Handlers.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
                  Handlers.$s$fMonadBasebWidgetT2 -}
37b6ff41b543b2949e16c4b5d38f668a
  $s$fMonadHandlerWidgetT ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadHandlerWidgetT2
                  (Yesod.Core.Class.Handler.$fMonadHandlerWidgetT_$cliftHandlerT
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadHandlerWidgetT2
                     Handlers.$s$fMonadHandlerWidgetT1) -}
31771c4cf2b9f94810519de9f1761c72
  $s$fMonadHandlerWidgetT1 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: ((Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
5aea607a227ec9ad9be986dc2fbcb7ef
  $s$fMonadHandlerWidgetT2 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT -}
48d634482682ce7b869e12128287f560
  $s$fMonadHandlerWidgetT3 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadBasebWidgetT -}
91cd8619b9eb451007a4a32cfcd3660f
  $s$fMonadHandlerWidgetT4 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT -}
2639f39da7621de667ca51f6b3fbb13c
  $s$fMonadHandlerWidgetT5 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT -}
f1a9c43dd8795fea46e23c2d9cdfec56
  $s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadIOWidgetT_$cliftIO
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.IO.Class.$fMonadIOIO) -}
9aea2b5d529c698158b7d3cfac161301
  $s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadHandlerWidgetT5
                  Handlers.$s$fMonadHandlerWidgetT4
                  Handlers.$s$fMonadBasebWidgetT3
                  Handlers.$s$fMonadHandlerWidgetT3
                  (Yesod.Core.Types.$fMonadResourceWidgetT_$cliftResourceT
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadHandlerWidgetT5
                     Handlers.$s$fMonadHandlerWidgetT4
                     Handlers.$s$fMonadBasebWidgetT3
                     Handlers.$s$fMonadHandlerWidgetT3
                     GHC.Base.$fApplicativeIO
                     Control.Monad.IO.Class.$fMonadIOIO
                     Control.Monad.Base.$fMonadBaseIOIO
                     Control.Monad.Catch.$fMonadThrowIO) -}
cedc968ec775c2c8569974ceb0847a7d
  $s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadBasebWidgetT1
                  (Yesod.Core.Types.$fMonadThrowWidgetT_$cthrowM
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadBasebWidgetT1
                     Control.Monad.Catch.$fMonadThrowIO) -}
004a483e539a1d054fd0ad0edf8d7353
  $s$fMonadWidgetWidgetT ::
    Yesod.Core.Class.Handler.MonadWidget
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                  Handlers.$s$fMonadWidgetWidgetT1
                  (Yesod.Core.Class.Handler.$fMonadWidgetWidgetT_$cliftWidgetT
                     @ Foundation.Sitio
                     @ GHC.Types.IO
                     Handlers.$s$fMonadWidgetWidgetT1
                     Handlers.$s$fMonadHandlerWidgetT1) -}
1d75aec7fbea44cbebaf2bd1473c7840
  $s$fMonadWidgetWidgetT1 ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Handlers.$s$fMonadHandlerWidgetT -}
d9098b50c06b0a14cc31fed5c66e811b
  $stoWidget7 ::
    Yesod.Core.Types.RY Foundation.Sitio
    ~ Yesod.Core.Types.RY Foundation.Sitio
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq#
                   @ *
                   @ (Yesod.Core.Types.RY Foundation.Sitio)
                   @ (Yesod.Core.Types.RY Foundation.Sitio)
                   @~ <Yesod.Core.Types.RY Foundation.Sitio>_N) -}
5499d6e2e5037f6b3b911624b7a181eb
  $w$cyesodDispatch ::
    Yesod.Core.Types.YesodRunnerEnv Foundation.Sitio
    -> Network.HTTP.Types.Method.Method
    -> Network.HTTP.Types.Version.HttpVersion
    -> Data.ByteString.Internal.ByteString
    -> Data.ByteString.Internal.ByteString
    -> Network.HTTP.Types.Header.RequestHeaders
    -> GHC.Types.Bool
    -> Network.Socket.Types.SockAddr
    -> [Data.Text.Internal.Text]
    -> Network.HTTP.Types.URI.Query
    -> GHC.Types.IO Data.ByteString.Internal.ByteString
    -> Data.Vault.Lazy.Vault
    -> Network.Wai.Internal.RequestBodyLength
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> GHC.Base.Maybe Data.ByteString.Internal.ByteString
    -> (Network.Wai.Internal.Response
        -> GHC.Types.IO Network.Wai.Internal.ResponseReceived)
    -> GHC.Types.IO Network.Wai.Internal.ResponseReceived
  {- Arity: 17,
     Strictness: <L,U(U,U,U,U,C(U(U,1*U(U,U,U))))><L,U(U,U,U,U)><L,U><L,U><L,U><L,U><L,U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
74485102fdddffbff14e09e25dab26c5
  dptos ::
    (Yesod.Persist.Core.YesodPersist site,
     Yesod.Persist.Core.YesodPersistBackend site
     ~ Database.Persist.Sql.Types.SqlBackend) =>
    Yesod.Core.Types.HandlerT
      site
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Departamento))
  {- Arity: 2, Strictness: <L,1*U(A,1*C1(U))><L,1*H>,
     Unfolding: (\ @ site
                   $dYesodPersist :: Yesod.Persist.Core.YesodPersist site
                   cobox :: Yesod.Persist.Core.YesodPersistBackend site
                            ~ Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           [Database.Persist.Class.PersistEntity.Entity
                              Foundation.Departamento]
                   = Yesod.Persist.Core.runDB
                       @ site
                       $dYesodPersist
                       @ [Database.Persist.Class.PersistEntity.Entity
                            Foundation.Departamento]
                       (case cobox of cobox1 { GHC.Types.Eq# cobox2 ->
                        (Handlers.dptos17 @ site)
                          `cast`
                        (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                  (Sub cobox2)
                                  <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                                  <[Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Departamento]>_N)) })
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Departamento]>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <[Database.Persist.Class.PersistEntity.Entity
                                Foundation.Departamento]>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  ((Yesod.Form.Fields.optionsPairs
                      @ Data.Text.Internal.Text
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Departamento)
                      @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                      (Handlers.dptos9 @ site)
                      (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                         @ site)
                        `cast`
                      (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                     <site>_N <GHC.Types.IO>_N)
                                <Data.Text.Internal.Text>_N))
                      (GHC.Base.map
                         @ (Database.Persist.Class.PersistEntity.Entity
                              Foundation.Departamento)
                         @ (Data.Text.Internal.Text,
                            Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
                         Handlers.dptos2
                         ipv1))
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <site>_N
                        <GHC.Types.IO>_N
                        <Yesod.Form.Fields.OptionList
                           (Database.Persist.Class.PersistEntity.Key
                              Foundation.Departamento)>_N)
                     r)
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Departamento)>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <Yesod.Form.Fields.OptionList
                                        (Database.Persist.Class.PersistEntity.Key
                                           Foundation.Departamento)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <Yesod.Form.Fields.OptionList
                                   (Database.Persist.Class.PersistEntity.Key
                                      Foundation.Departamento)>_N)))) -}
3c15a59ed8a11e22217331d6285c37eb
  dptos10 ::
    Control.Monad.Trans.Resource.MonadResourceBase GHC.Types.IO
  {- Strictness: m,
     Unfolding: (\ @ site ->
                 (Control.Monad.Trans.Control.$fMonadBaseControlIOIO,
                  Control.Monad.Catch.$fMonadThrowIO,
                  Control.Monad.Base.$fMonadBaseIOIO,
                  Control.Monad.IO.Class.$fMonadIOIO,
                  GHC.Base.$fApplicativeIO)) -}
7484ba2464562fb030e4d543fb10bea6
  dptos11 ::
    Control.Monad.Trans.Resource.Internal.MonadResource
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadResourceHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.dptos16 @ site)
                   (Handlers.dptos15 @ site)
                   (Handlers.dptos14 @ site)
                   (Handlers.dptos12 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO
                   Control.Monad.Base.$fMonadBaseIOIO
                   Control.Monad.Catch.$fMonadThrowIO) -}
d7f8c0d2d76c2587c0f292888ae87a80
  dptos12 ::
    Control.Monad.Base.MonadBase
      GHC.Types.IO (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadBasebHandlerT
                   @ GHC.Types.IO
                   @ site
                   @ GHC.Types.IO
                   GHC.Base.$fApplicativeIO
                   (Handlers.dptos14 @ site)
                   GHC.Base.$fMonadIO
                   (Handlers.dptos13 @ site)
                   Control.Monad.Base.$fMonadBaseIOIO) -}
9a8266ced88619bd3b855127d675f089
  dptos13 ::
    GHC.Base.Monad (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.dptos14 @ site)
                   GHC.Base.$fMonadIO) -}
4aa0f66160e47e0388d1a2175c20224f
  dptos14 ::
    GHC.Base.Applicative (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fApplicativeHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Yesod.Core.Handler.$s$fFunctorHandlerT @ site)
                   GHC.Base.$fMonadIO) -}
15338994265a9e79d399ebdd44723fe2
  dptos15 ::
    Control.Monad.IO.Class.MonadIO
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadIOHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.dptos13 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
5066a7ec337ab2c0271514db7731654c
  dptos16 ::
    Control.Monad.Catch.MonadThrow
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Types.$fMonadThrowHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.dptos13 @ site)
                   Control.Monad.Catch.$fMonadThrowIO) -}
e3888e3f52c2ce9447af31ad1a8c099c
  dptos17 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         site
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Departamento]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ @ site r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           site
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Departamento)))
                   = (Handlers.dptos_m2 @ site)
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT site GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Departamento))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           site (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <site>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Departamento))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Departamento))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity
                          Foundation.Departamento]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Departamento)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity
                            Foundation.Departamento)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Departamento]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Departamento]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          site (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Departamento]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <site>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Departamento]>_N)))) -}
27462b3da4c534f799d5eca11eb73d03
  dptos18 ::
    [Database.Persist.Class.PersistEntity.Filter
       Foundation.Departamento]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Departamento]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT site GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity
                  Foundation.Departamento)))
  {- Unfolding: (\ @ site ->
                 Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Departamento
                   @ (Yesod.Core.Types.HandlerT site GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityDepartamento
                   (Handlers.dptos15 @ site)
                   Control.Monad.IO.Class.$fMonadIOIO) -}
05fdc9f2aaf0481cefb08a6a6adb1f73
  dptos2 ::
    Database.Persist.Class.PersistEntity.Entity Foundation.Departamento
    -> (Data.Text.Internal.Text,
        Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U>m,
     Unfolding: InlineRule (1, True, False)
                (\ ent :: Database.Persist.Class.PersistEntity.Entity
                            Foundation.Departamento ->
                 (case ent of wild { Database.Persist.Class.PersistEntity.Entity $dPersistEntity ds1 ds2 ->
                  case ds2 of wild1 { Foundation.Departamento ds4 ds5 -> ds5 } },
                  Database.Persist.Class.PersistEntity.entityKey
                    @ Foundation.Departamento
                    ent)) -}
c5d553ce7bafd8fbc501ed2dfe3f6daa
  dptos5 ::
    [Database.Persist.Class.PersistEntity.SelectOpt
       Foundation.Departamento]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Departamento)
                   Handlers.dptos6
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Departamento))) -}
9a03ecf89645f805f0ff54cbd82aff96
  dptos6 ::
    Database.Persist.Class.PersistEntity.SelectOpt
      Foundation.Departamento
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Departamento
                   @ Data.Text.Internal.Text
                   Handlers.dptos7
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldDepartamentotyp[0])) <Data.Text.Internal.Text>_N)) -}
b4c89faf716ecfca96a030eef84e0038
  dptos7 ::
    Foundation.R:EntityFieldDepartamentotyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.DepartamentoNome
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
76cf9e02b589be34f47401c2f0dab878
  dptos9 ::
    Yesod.Core.Class.Handler.MonadHandler
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
  {- Unfolding: (\ @ site ->
                 Yesod.Core.Class.Handler.$fMonadHandlerHandlerT
                   @ site
                   @ GHC.Types.IO
                   (Handlers.dptos11 @ site)
                   (Handlers.dptos10 @ site)) -}
2a0dfcb730839481ed6d2bc6803e97de
  dptos_m2 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT site GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity
               Foundation.Departamento)))
  {- Unfolding: (\ @ site ->
                 Handlers.dptos18
                   @ site
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter
                           Foundation.Departamento))
                   Handlers.dptos5) -}
1e461334346b29f55360f9d03515411b
  formDepto :: Foundation.Form Foundation.Departamento
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formDepto1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Foundation.Handler>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Departamento>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Sitio>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
854ca3bbe37e01b7f30cc6a6dd6690df
  formDepto1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Foundation.Handler
         ((Yesod.Form.Types.FormResult Foundation.Departamento,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta1 :: Text.Blaze.Internal.Markup
                   eta2 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                            [Text.Shakespeare.I18N.Lang])
                   eta3 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ Foundation.Handler
                   @ Foundation.Departamento
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formDepto2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Departamento>_N))
                   eta1
                   eta2
                   eta3) -}
2f60be6f4ac7fc1609fd16bc57584022
  formDepto10 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "hident2"#) -}
a983247944340c11435ebf26d84baeb2
  formDepto11 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDepto12) -}
63505fd8b52a99880beda5a8b79fa77b
  formDepto12 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formDepto13
                      0
                      ipv })) -}
5f2fe5389cd05f6356c317adb7c1f8d2
  formDepto13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Sigla"#) -}
416e2a2b3fe36a9df01ad0c20c99d4cd
  formDepto14 ::
    Yesod.Form.Types.Field Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Types.Field
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   Handlers.formDepto15
                   (Yesod.Form.Fields.textField1 @ Foundation.Handler)
                   Yesod.Form.Types.UrlEncoded) -}
108705b4b091743a563a8fb2bca832c4
  formDepto15 ::
    [Data.Text.Internal.Text]
    -> [Yesod.Core.Types.FileInfo]
    -> Foundation.Handler
         (Data.Either.Either
            (Text.Shakespeare.I18N.SomeMessage
               (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler))
            (GHC.Base.Maybe Data.Text.Internal.Text))
  {- Arity: 2,
     Unfolding: (\ w3 :: [Data.Text.Internal.Text]
                   w4 :: [Yesod.Core.Types.FileInfo][OneShot] ->
                 Yesod.Form.Functions.$wparseHelperGen
                   @ Yesod.Form.Types.FormMessage
                   @ Data.Text.Internal.Text
                   @ Foundation.Handler
                   @ (Yesod.Core.Class.Handler.HandlerSite Foundation.Handler)
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerT
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   (Data.Either.Right
                      @ Yesod.Form.Types.FormMessage
                      @ Data.Text.Internal.Text)
                   w3) -}
c65f1f100f9ce44ab0255f712ebdfbd0
  formDepto16 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Data.Text.Internal.Text -> Foundation.Departamento),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta1 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta2 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formDepto_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta1
                       eta2
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x13 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (Data.Text.Internal.Text -> Foundation.Departamento)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (Data.Text.Internal.Text -> Foundation.Departamento)
                             errs
                        Yesod.Form.Types.FormSuccess a66
                        -> Yesod.Form.Types.FormSuccess
                             @ (Data.Text.Internal.Text -> Foundation.Departamento)
                             (Foundation.$WDepartamento a66) },
                      x13,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (Data.Text.Internal.Text -> Foundation.Departamento),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (Data.Text.Internal.Text -> Foundation.Departamento),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
eebf034dac43cf6bd939e315b6de5a23
  formDepto17 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formDepto18
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
a68688aa62c6c473418218548bb3cfa9
  formDepto18 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formDepto19) -}
3771561971b958ac8f4f0f1526fc84e5
  formDepto19 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Handlers.formDepto20) -}
1a8c119464b37b9402c73d217537362c
  formDepto2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Departamento,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerT
                   @ Data.Text.Internal.Text
                   @ Foundation.Departamento
                   Handlers.formDepto16
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Data.Text.Internal.Text -> Foundation.Departamento>_N))
                   Handlers.formDepto3
                   w4
                   w5
                   w6) -}
99613664645c79933587c6c124a4e25e
  formDepto20 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Text.Shakespeare.I18N.$fIsStringSomeMessage2
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Text.Shakespeare.I18N.$fIsStringSomeMessage1
                   Handlers.formDepto21
                   0
                   ipv }) -}
649e7740c03d10f8bd384626fea85ab0
  formDepto21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Nome"#) -}
a4c79327c5df315b757bcdf2d1080a4b
  formDepto3 ::
    Yesod.Form.Types.AForm Foundation.Handler Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Sitio
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Foundation.Sitio
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Sitio>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Handlers.formDepto14
                   Handlers.formDepto4
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
54941a2a1daa59eb815dc4145706936e
  formDepto4 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formDepto11
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   Handlers.formDepto9
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   Handlers.formDepto5) -}
3c6931e671cb942075ee8632dee1adc2
  formDepto5 :: [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
  {- Unfolding: (GHC.Types.:
                   @ (Data.Text.Internal.Text, Data.Text.Internal.Text)
                   Handlers.formDepto6
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
ad1f96d1ffedf83e0716d03456ef33ae
  formDepto6 :: (Data.Text.Internal.Text, Data.Text.Internal.Text)
  {- Unfolding: ((Handlers.formDepto8, Handlers.formDepto7)) -}
9c01bdab65bb666d315e4f7402c71ca6
  formDepto7 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "2"#) -}
e752a47c52b72b4562d2756c9ccb4598
  formDepto8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "maxlength"#) -}
8b28e21f0032b0f8b4b7fc9ddf06fb58
  formDepto9 :: GHC.Base.Maybe Data.Text.Internal.Text
  {- Unfolding: (GHC.Base.Just
                   @ Data.Text.Internal.Text
                   Handlers.formDepto10) -}
b5850b8b8d24c1cdeffb3767a2636a26
  formDepto_ds ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      Data.Text.Internal.Text
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ Foundation.Handler
                   @ Data.Text.Internal.Text
                   @ Foundation.Sitio
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Foundation.Sitio
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Sitio>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Handlers.formDepto14
                   Handlers.formDepto17
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)) -}
a6a29a37fdb0f63c8deac999cda89b77
  formPessoa :: Foundation.Form Foundation.Pessoa
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.formPessoa1
                  `cast`
                (<Text.Blaze.Internal.MarkupM ()>_R
                 ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                               <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                 Yesod.Core.Class.Handler.HandlerSite
                                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                 [Text.Shakespeare.I18N.Lang])>_R
                               <Yesod.Form.Types.Enctype>_N
                               <Yesod.Form.Types.Ints>_N
                               <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                               ((<Yesod.Form.Types.FormResult Foundation.Pessoa>_N,
                                 (Yesod.Core.Types.WidgetT
                                    (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                              <Foundation.Sitio>_N <GHC.Types.IO>_N))
                                    <GHC.Types.IO>_N
                                    <()>_N)_N))_N)) -}
89927956adf165b5b16b80205504893e
  formPessoa1 ::
    Text.Blaze.Internal.Markup
    -> (GHC.Base.Maybe
          (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
        Yesod.Core.Class.Handler.HandlerSite
          (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
        [Text.Shakespeare.I18N.Lang])
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         ((Yesod.Form.Types.FormResult Foundation.Pessoa,
           Yesod.Core.Types.WidgetT
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
             GHC.Types.IO
             ()),
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ eta1 :: Text.Blaze.Internal.Markup
                   eta2 :: (GHC.Base.Maybe
                              (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                            Yesod.Core.Class.Handler.HandlerSite
                              (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                            [Text.Shakespeare.I18N.Lang])
                   eta3 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Functions.renderDivs2
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Pessoa
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerT
                   GHC.Types.True
                   Handlers.formPessoa2
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Foundation.Pessoa>_N))
                   eta1
                   eta2
                   eta3) -}
4c528f3fdf744c933eccf47c20d1e592
  formPessoa10 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity
            Foundation.Departamento]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity
                        Foundation.Departamento]
                   Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                   (Handlers.dptos17 @ Foundation.Sitio)
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Departamento]>_N))) -}
0795dbd56b1fd893c8e8cdb9dc8699be
  formPessoa11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      (Yesod.Form.Fields.OptionList
         (Database.Persist.Class.PersistEntity.Key Foundation.Departamento))
    -> Yesod.Form.Types.Field
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Unfolding: (Yesod.Form.Fields.selectField
                   @ Foundation.Sitio
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Departamento)
                   Foundation.$fEqKey0
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))) -}
095522d6e5096f00775a661257bf4dd6
  formPessoa12 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (Database.Persist.Class.PersistEntity.Key Foundation.Departamento
             -> Foundation.Pessoa),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerT
                   @ GHC.Types.Double
                   @ (Database.Persist.Class.PersistEntity.Key Foundation.Departamento
                      -> Foundation.Pessoa)
                   Handlers.formPessoa20
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <GHC.Types.Double
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Departamento
                              -> Foundation.Pessoa>_N))
                   Handlers.formPessoa13
                   w4
                   w5
                   w6) -}
fbbf53258f1249587058cd09c7d80ec6
  formPessoa13 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      GHC.Types.Double
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.Double
                   @ Foundation.Sitio
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Foundation.Sitio
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Sitio>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Handlers.formPessoa18
                   Handlers.formPessoa14
                   (GHC.Base.Nothing @ GHC.Types.Double)) -}
96571c1e0850e442a6c5f18ec6855687
  formPessoa14 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formPessoa15
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
733d9fe729dbf702f2026c1b41573542
  formPessoa15 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa16) -}
7a1a09e1b5a92ececf81aac847594768
  formPessoa16 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa17
                      0
                      ipv })) -}
e9eb6183f954c644b4effc3df7563061
  formPessoa17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Salario"#) -}
29eef4a1915f3c25063f6c9a345025ff
  formPessoa18 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      GHC.Types.Double
  {- Unfolding: (Yesod.Form.Types.Field
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.Double
                   Handlers.formPessoa19
                   (Yesod.Form.Fields.doubleField1
                      @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                   Yesod.Form.Types.UrlEncoded) -}
7bd1df218dfc76c534a901f9011df549
  formPessoa19 ::
    [Data.Text.Internal.Text]
    -> [Yesod.Core.Types.FileInfo]
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Data.Either.Either
            (Text.Shakespeare.I18N.SomeMessage
               (Yesod.Core.Class.Handler.HandlerSite
                  (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)))
            (GHC.Base.Maybe GHC.Types.Double))
  {- Arity: 2,
     Unfolding: (\ w3 :: [Data.Text.Internal.Text]
                   w4 :: [Yesod.Core.Types.FileInfo][OneShot] ->
                 Yesod.Form.Functions.$wparseHelperGen
                   @ Yesod.Form.Types.FormMessage
                   @ GHC.Types.Double
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Yesod.Core.Class.Handler.HandlerSite
                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerT
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Yesod.Form.Fields.doubleField7
                   w3) -}
dffb40bb34d698a83ebefbeea0620b80
  formPessoa2 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult Foundation.Pessoa,
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerT
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Departamento)
                   @ Foundation.Pessoa
                   Handlers.formPessoa12
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <Database.Persist.Class.PersistEntity.Key Foundation.Departamento
                              -> Foundation.Pessoa>_N))
                   Handlers.formPessoa3
                   w4
                   w5
                   w6) -}
33b68946be56e89984181c20c7d460fd
  formPessoa20 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (GHC.Types.Double
             -> Database.Persist.Class.PersistEntity.Key Foundation.Departamento
             -> Foundation.Pessoa),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ w4 :: (Yesod.Core.Class.Handler.HandlerSite
                            (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                          [Data.Text.Internal.Text])
                   w5 :: GHC.Base.Maybe
                           (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   w6 :: Yesod.Form.Types.Ints ->
                 Yesod.Form.Types.$wa
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerT
                   @ GHC.Types.Int
                   @ (GHC.Types.Double
                      -> Database.Persist.Class.PersistEntity.Key Foundation.Departamento
                      -> Foundation.Pessoa)
                   Handlers.formPessoa27
                     `cast`
                   (Sym (Yesod.Form.Types.NTCo:AForm[0]
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                             <GHC.Types.Int
                              -> GHC.Types.Double
                              -> Database.Persist.Class.PersistEntity.Key Foundation.Departamento
                              -> Foundation.Pessoa>_N))
                   Handlers.formPessoa21
                   w4
                   w5
                   w6) -}
c9057f42886249bd33d1441ce94123fa
  formPessoa21 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      GHC.Types.Int
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.Int
                   @ Foundation.Sitio
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Foundation.Sitio
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Sitio>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Handlers.formPessoa26
                   Handlers.formPessoa22
                   (GHC.Base.Nothing @ GHC.Types.Int)) -}
055925f5f4e440d894676b39721ee188
  formPessoa22 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formPessoa23
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
1a5cd4e3dbbd20ee1e80405d442c16c4
  formPessoa23 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa24) -}
67c2737e67ad89348ef894cc9301f9d6
  formPessoa24 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa25
                      0
                      ipv })) -}
1d10734d7dde0e1931a6997b893d055f
  formPessoa25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Idade"#) -}
3072a2b727bac4ab9f860a8d59af8232
  formPessoa26 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      GHC.Types.Int
  {- Unfolding: (case Yesod.Form.Fields.$wintField
                        @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                        @ GHC.Types.Int
                        Foundation.$fYesodPersistSitio_$s$fMonadHandlerT
                        GHC.Real.$fIntegralInt
                        Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                          `cast`
                        (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                                  (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                       <Foundation.Sitio>_N <GHC.Types.IO>_N)
                                  <Yesod.Form.Types.FormMessage>_N)) of ww { (#,,#) ww1 ww2 ww3 ->
                 Yesod.Form.Types.Field
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.Int
                   ww1
                   ww2
                   ww3 }) -}
c9fa6425f99485752bb894fadf914ff5
  formPessoa27 ::
    (Yesod.Core.Class.Handler.HandlerSite
       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
     [Data.Text.Internal.Text])
    -> GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
    -> Yesod.Form.Types.Ints
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         (Yesod.Form.Types.FormResult
            (GHC.Types.Int
             -> GHC.Types.Double
             -> Database.Persist.Class.PersistEntity.Key Foundation.Departamento
             -> Foundation.Pessoa),
          [Yesod.Form.Types.FieldView
             (Yesod.Core.Class.Handler.HandlerSite
                (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
          -> [Yesod.Form.Types.FieldView
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
          Yesod.Form.Types.Ints,
          Yesod.Form.Types.Enctype)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: (\ eta :: (Yesod.Core.Class.Handler.HandlerSite
                             (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                           [Data.Text.Internal.Text])
                   eta1 :: GHC.Base.Maybe
                             (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv)
                   eta2 :: Yesod.Form.Types.Ints ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                            [Yesod.Form.Types.FieldView
                               (Yesod.Core.Class.Handler.HandlerSite
                                  (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                            -> [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                            Yesod.Form.Types.Ints,
                            Yesod.Form.Types.Enctype)
                   = Handlers.formDepto_ds
                       `cast`
                     (Yesod.Form.Types.NTCo:AForm[0]
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_N
                          <Data.Text.Internal.Text>_N)
                       eta
                       eta1
                       eta2
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                               [Yesod.Form.Types.FieldView
                                  (Yesod.Core.Class.Handler.HandlerSite
                                     (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                               -> [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                               Yesod.Form.Types.Ints,
                               Yesod.Form.Types.Enctype)>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <(Yesod.Form.Types.FormResult Data.Text.Internal.Text,
                              [Yesod.Form.Types.FieldView
                                 (Yesod.Core.Class.Handler.HandlerSite
                                    (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                              -> [Yesod.Form.Types.FieldView
                                    (Yesod.Core.Class.Handler.HandlerSite
                                       (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))],
                              Yesod.Form.Types.Ints,
                              Yesod.Form.Types.Enctype)>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (# ipv,
                     case ipv1 of wild { (,,,) w x13 y z ->
                     (case w of wild1 {
                        Yesod.Form.Types.FormMissing
                        -> Yesod.Form.Types.FormMissing
                             @ (GHC.Types.Int
                                -> GHC.Types.Double
                                -> Database.Persist.Class.PersistEntity.Key Foundation.Departamento
                                -> Foundation.Pessoa)
                        Yesod.Form.Types.FormFailure errs
                        -> Yesod.Form.Types.FormFailure
                             @ (GHC.Types.Int
                                -> GHC.Types.Double
                                -> Database.Persist.Class.PersistEntity.Key Foundation.Departamento
                                -> Foundation.Pessoa)
                             errs
                        Yesod.Form.Types.FormSuccess a66
                        -> Yesod.Form.Types.FormSuccess
                             @ (GHC.Types.Int
                                -> GHC.Types.Double
                                -> Database.Persist.Class.PersistEntity.Key Foundation.Departamento
                                -> Foundation.Pessoa)
                             (Foundation.$WPessoa a66) },
                      x13,
                      y,
                      z) } #) })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <(Yesod.Form.Types.FormResult
                                         (GHC.Types.Int
                                          -> GHC.Types.Double
                                          -> Database.Persist.Class.PersistEntity.Key
                                               Foundation.Departamento
                                          -> Foundation.Pessoa),
                                       [Yesod.Form.Types.FieldView
                                          (Yesod.Core.Class.Handler.HandlerSite
                                             (Yesod.Core.Types.HandlerT
                                                Foundation.Sitio GHC.Types.IO))]
                                       -> [Yesod.Form.Types.FieldView
                                             (Yesod.Core.Class.Handler.HandlerSite
                                                (Yesod.Core.Types.HandlerT
                                                   Foundation.Sitio GHC.Types.IO))],
                                       Yesod.Form.Types.Ints,
                                       Yesod.Form.Types.Enctype)>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <(Yesod.Form.Types.FormResult
                                    (GHC.Types.Int
                                     -> GHC.Types.Double
                                     -> Database.Persist.Class.PersistEntity.Key
                                          Foundation.Departamento
                                     -> Foundation.Pessoa),
                                  [Yesod.Form.Types.FieldView
                                     (Yesod.Core.Class.Handler.HandlerSite
                                        (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))]
                                  -> [Yesod.Form.Types.FieldView
                                        (Yesod.Core.Class.Handler.HandlerSite
                                           (Yesod.Core.Types.HandlerT
                                              Foundation.Sitio GHC.Types.IO))],
                                  Yesod.Form.Types.Ints,
                                  Yesod.Form.Types.Enctype)>_N)))) -}
c774dffc9a1f0dcec96965faa83021dd
  formPessoa3 ::
    Yesod.Form.Types.AForm
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Unfolding: (Yesod.Form.Functions.areq
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ (Database.Persist.Class.PersistEntity.Key
                        Foundation.Departamento)
                   @ Foundation.Sitio
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Yesod.Form.Types.FormMessage>_N))
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO))
                      @ Foundation.Sitio
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                              <Foundation.Sitio>_N <GHC.Types.IO>_N))
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Handlers.formPessoa8
                   Handlers.formPessoa4
                   (GHC.Base.Nothing
                      @ (Database.Persist.Class.PersistEntity.Key
                           Foundation.Departamento))) -}
83002731ab105f4215c0ece9f9bad1ca
  formPessoa4 :: Yesod.Form.Types.FieldSettings Foundation.Sitio
  {- Unfolding: (Yesod.Form.Types.FieldSettings
                   @ Foundation.Sitio
                   Handlers.formPessoa5
                   (GHC.Base.Nothing
                      @ (Text.Shakespeare.I18N.SomeMessage Foundation.Sitio))
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Base.Nothing @ Data.Text.Internal.Text)
                   (GHC.Types.[]
                      @ (Data.Text.Internal.Text, Data.Text.Internal.Text))) -}
1a11477997f779fc47bbdf2e7f7a9401
  formPessoa5 :: Text.Shakespeare.I18N.SomeMessage Foundation.Sitio
  {- Unfolding: (Text.Shakespeare.I18N.SomeMessage
                   @ Foundation.Sitio
                   @ Data.Text.Internal.Text
                   (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             <Foundation.Sitio>_N <Data.Text.Internal.Text>_N))
                   Handlers.formPessoa6) -}
c8b967aa4e7ec42270ada9d270b10bd6
  formPessoa6 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                    Text.Shakespeare.I18N.$fIsStringSomeMessage2
                      @ s1
                      (Data.Text.Array.MArray @ s1 ipv1)
                      Text.Shakespeare.I18N.$fIsStringSomeMessage1
                      Handlers.formPessoa7
                      0
                      ipv })) -}
ceae0ba7beb6cc761b8ccb95ef8c8e8e
  formPessoa7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Depto"#) -}
3f7d1a915769d0662f0d15296edbaaaf
  formPessoa8 ::
    Yesod.Form.Types.Field
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Unfolding: (Handlers.formPessoa11
                   Handlers.formPessoa9
                     `cast`
                   (Trans
                        (<Yesod.Core.Types.HandlerData
                            Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0]
                                       <Yesod.Form.Fields.OptionList
                                          (Database.Persist.Class.PersistEntity.Key
                                             Foundation.Departamento)>_R))
                        (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                  <Foundation.Sitio>_N
                                  <GHC.Types.IO>_N
                                  <Yesod.Form.Fields.OptionList
                                     (Database.Persist.Class.PersistEntity.Key
                                        Foundation.Departamento)>_N)))) -}
ea0d845536007d7f797ff8f4742e7647
  formPessoa9 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Yesod.Form.Fields.OptionList
            (Database.Persist.Class.PersistEntity.Key
               Foundation.Departamento) #)
  {- Arity: 2,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento]
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        Handlers.formPessoa10
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 ((Yesod.Form.Fields.optionsPairs
                     @ Data.Text.Internal.Text
                     @ (Database.Persist.Class.PersistEntity.Key
                          Foundation.Departamento)
                     @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                     (Handlers.dptos9 @ Foundation.Sitio)
                     (Text.Shakespeare.I18N.$fIsStringSomeMessage_$crenderMessage
                        @ Foundation.Sitio)
                       `cast`
                     (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                               (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                    <Foundation.Sitio>_N <GHC.Types.IO>_N)
                               <Data.Text.Internal.Text>_N))
                     (GHC.Base.map
                        @ (Database.Persist.Class.PersistEntity.Entity
                             Foundation.Departamento)
                        @ (Data.Text.Internal.Text,
                           Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
                        Handlers.dptos2
                        ipv3))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Sitio>_N
                       <GHC.Types.IO>_N
                       <Yesod.Form.Fields.OptionList
                          (Database.Persist.Class.PersistEntity.Key
                             Foundation.Departamento)>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0]
                      <Yesod.Form.Fields.OptionList
                         (Database.Persist.Class.PersistEntity.Key
                            Foundation.Departamento)>_R)
                   ipv2 } }) -}
335e614021674b4428bb720a812cbcba
  getCadastroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadastroR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
fab65e505a6e0a3a0b1b6cd25064c9d4
  getCadastroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getCadastroR4
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (Handlers.getCadastroR3
                        Foundation.CadastroR
                          `cast`
                        (Sub (Sym (Foundation.TFCo:R:RouteSitio[0])))
                        enctype
                        widget
                        Handlers.getCadastroR2)
                       `cast`
                     (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
d23f23e8c97ac18ab832590b218cb10e
  getCadastroR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Pessoas"#) -}
40f70cc8cdbdfa36a11d385b150445f4
  getCadastroR3 ::
    Yesod.Routes.Class.Route Foundation.Sitio
    -> Yesod.Form.Types.Enctype
    -> Foundation.Widget
    -> Data.Text.Internal.Text
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Types.IO
         ((),
          Yesod.Core.Types.GWData
            (Yesod.Routes.Class.Route Foundation.Sitio))
  {- Arity: 5, Strictness: <L,U><L,1*U><L,C(U)><L,U><L,U> -}
9137407484690b8bcc8834137427df08
  getCadastroR4 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Pessoa
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Pessoa>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
2ee7512eb046ab925074abcd9ca6adfa
  getDeptoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getDeptoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
358fbfffb140f8e3a736eafae9082ca9
  getDeptoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.getDeptoR3
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <(Foundation.Widget, Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Foundation.Widget, Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) widget enctype ->
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (Handlers.getCadastroR3
                        Foundation.DeptoR
                          `cast`
                        (Sub (Sym (Foundation.TFCo:R:RouteSitio[0])))
                        enctype
                        widget
                        Handlers.getDeptoR2)
                       `cast`
                     (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv } }) -}
7a06212252349f97aa7c6afccb4ac184
  getDeptoR2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "Departamentos"#) -}
54b483815018b063885c62e786503a6a
  getDeptoR3 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      (Foundation.Widget, Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.generateFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Departamento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Handlers.formDepto1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Departamento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
0fc88b294655caa3cc1bc6a94cb3203b
  getListarR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getListarR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
71d241a287ca364def250a69cb8be6d5
  getListarR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Foundation.$fYesodPersistSitio8
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Foundation.$fYesodPersistSitio7
                        @ Database.Persist.Sql.Types.SqlBackend
                        @ [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
                        (case ipv1 of wild { Foundation.Sitio ds -> ds })
                        Handlers.getListarR39
                        r
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 let {
                   lvl73 :: ()
                            -> Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                            -> GHC.Prim.State# GHC.Prim.RealWorld
                            -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                  ((),
                                   Yesod.Core.Types.GWData
                                     (Yesod.Routes.Class.Route Foundation.Sitio)) #)
                     {- Arity: 3 -}
                   = \ ds :: ()
                       eta :: Yesod.Core.Types.HandlerData
                                Foundation.Sitio
                                (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                       eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                     Handlers.getListarR38 ipv3 eta eta1
                 } in
                 ((Foundation.$fYesodSitio_$cdefaultLayout
                     (let {
                        a66 :: Yesod.Core.Types.HandlerData
                                 Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                               -> GHC.Types.IO
                                    ((),
                                     Yesod.Core.Types.GWData
                                       (Yesod.Routes.Class.Route Foundation.Sitio))
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ eta :: Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                          Yesod.Core.Types.$wa1
                            @ Foundation.Sitio
                            @ GHC.Types.IO
                            GHC.Base.$fMonadIO
                            @ ()
                            @ ()
                            Handlers.getListarR34
                              `cast`
                            (Trans
                                 (<Yesod.Core.Types.HandlerData
                                     Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                  ->_R Sym (GHC.Types.NTCo:IO[0]
                                                ((<()>_R,
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Sitio>_N
                                                                  <GHC.Types.IO>_N)))_R)_R))_R))
                                 (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                           <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            lvl73
                              `cast`
                            (<()>_R
                             ->_R Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     <((),
                                                       Yesod.Core.Types.GWData
                                                         (Yesod.Routes.Class.Route
                                                            Foundation.Sitio))>_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                            eta
                      } in
                      (\ eta :: Yesod.Core.Types.HandlerData
                                  Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                       Yesod.Core.Types.$wa1
                         @ Foundation.Sitio
                         @ GHC.Types.IO
                         GHC.Base.$fMonadIO
                         @ ()
                         @ ()
                         a66
                           `cast`
                         (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                   <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                         Handlers.getListarR2
                         eta)
                        `cast`
                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                    `cast`
                  (Yesod.Core.Types.NTCo:HandlerT[0]
                       <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                    r)
                   `cast`
                 (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                   ipv2 } }) -}
57e2c659460e2c778366d53344b0b568
  getListarR10 :: [Text.Css.Attr Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.Attr Text.Css.Resolved)
                   Handlers.getListarR17
                   Handlers.getListarR11) -}
1d1cc8eb3628b211aee2c19b649dfad0
  getListarR11 :: [Text.Css.Attr Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.Attr Text.Css.Resolved)
                   Handlers.getListarR12
                   (GHC.Types.[] @ (Text.Css.Attr Text.Css.Resolved))) -}
2e9595cbc896150c37ad84a00a3a1c6e
  getListarR12 :: Text.Css.Attr Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Attr
                   @ Text.Css.Resolved
                   Handlers.getListarR15
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))
                   Handlers.getListarR13
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))) -}
3c4aba028dc63926f6dae021d46ba434
  getListarR13 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getListarR14)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
4ceebdfda5eca3bbd46d1d3af11e2b3e
  getListarR14 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "0"#) -}
b9c443fc597ea6ad992d9c258e9c5cd3
  getListarR15 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getListarR16)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
55a00e1fadd303639627c62aaa152381
  getListarR16 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "border"#) -}
a16316d21b52240d565bdca331e711cf
  getListarR17 :: Text.Css.Attr Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Attr
                   @ Text.Css.Resolved
                   Handlers.getListarR20
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))
                   Handlers.getListarR18
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))) -}
ff370b74a8febb96940628a4f57e3e69
  getListarR18 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getListarR19)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
d7153d3ae70ae115dd964ffff5ed3f32
  getListarR19 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "#ecc"#) -}
24505207660c2f72dfdfce3053a12524
  getListarR2 ::
    () -> Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Arity: 1, Unfolding: (\ ds :: () -> Handlers.getListarR3) -}
a4d01089a5e2926a84ee6f2b25eadb3f
  getListarR20 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getListarR21)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
6e8fefc964421b70e209fc87f09748b6
  getListarR21 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "background-color"#) -}
5e4bfd6fcbfdea0b5ccd47bce1376a85
  getListarR22 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getListarR23)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
cc572099b7924b9ef08d87c2a230e612
  getListarR23 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "input"#) -}
f2ee674f828513a66eba244a56072551
  getListarR24 :: Text.Css.TopLevel Text.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Css.TopBlock
                   @ Text.Css.Resolved
                   Handlers.getListarR25) -}
0111cd507ba0983e29845c042a9df26b
  getListarR25 :: Text.Css.Block Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Block
                   @ Text.Css.Resolved
                   Handlers.getListarR32
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:SelectorResolved[0])))))
                   Handlers.getListarR26
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:MixinsResolved[0])))) -}
33cf6df58933eca58b7b5408080d2816
  getListarR26 :: [Text.Css.Attr Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.Attr Text.Css.Resolved)
                   Handlers.getListarR27
                   (GHC.Types.[] @ (Text.Css.Attr Text.Css.Resolved))) -}
faa7ac669a2c86c696199fa230889198
  getListarR27 :: Text.Css.Attr Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Attr
                   @ Text.Css.Resolved
                   Handlers.getListarR30
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))
                   Handlers.getListarR28
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:StrResolved[0])))))) -}
ead4ee66fea2fad77d32e793046ca80f
  getListarR28 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getListarR29)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
2135bca7d620b385cd0535fce1c4961b
  getListarR29 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "inline"#) -}
8d0e4cf88b396e93048483afd8036e40
  getListarR3 ::
    Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO ()
  {- Unfolding: (Yesod.Core.Widget.$w$ctoWidget
                   @ Foundation.Sitio
                   @ (Yesod.Core.Types.RY Foundation.Sitio)
                   Handlers.$stoWidget7
                   @ (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)
                   Handlers.$s$fMonadWidgetWidgetT
                   (GHC.Types.Eq#
                      @ *
                      @ (Yesod.Core.Class.Handler.HandlerSite
                           (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))
                      @ Foundation.Sitio
                      @~ (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                              <Foundation.Sitio>_N <GHC.Types.IO>_N))
                   Handlers.getListarR4) -}
177c68af1391e1de432f09852fcf0a3a
  getListarR30 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getListarR31)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
5fbdec4d1d0fb7ee2062e08048f622cd
  getListarR31 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "display"#) -}
1a30cf1a0fa7bc362fe1b984804de89d
  getListarR32 ::
    (Data.Text.Internal.Builder.Buffer s
     -> GHC.ST.ST s [Data.Text.Internal.Text])
    -> Data.Text.Internal.Builder.Buffer s
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s, [Data.Text.Internal.Text] #)
  {- Arity: 3, Strictness: <L,1*C1(C1(U(U,U)))><L,U(U,U,U,U)><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ s
                   eta :: Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]
                   eta1 :: Data.Text.Internal.Builder.Buffer s
                   eta2 :: GHC.Prim.State# s[OneShot] ->
                 ((Text.Css.fromText Handlers.getListarR33)
                    `cast`
                  (Data.Text.Internal.Builder.NTCo:Builder[0])
                    @ s
                    (\ buf :: Data.Text.Internal.Builder.Buffer s -> eta buf)
                    eta1)
                   `cast`
                 (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R)
                   eta2) -}
c940f148f5dc17d60e956cb7a7e3a537
  getListarR33 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "form"#) -}
ba6fe0a410c30feb851723d564e76163
  getListarR34 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                         Handlers.getListarR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
83645eb7cb5d246284ae9b3e32a1a4d3
  getListarR35 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.getListarR36) -}
b1d8a241a099390693a4deb8d1ef2547
  getListarR36 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.getListarR37) -}
4f42a0c9f569ef518171494375cc0f71
  getListarR37 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   "<h1> Pessoas cadastradas:</h1>\n"#) -}
c1421fcddd3fa95650e633e89382ff94
  getListarR38 ::
    [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route Foundation.Sitio)) #)
  {- Arity: 3, Strictness: <S,1*U><L,U><L,U> -}
0541c6081631b2001e756e07f270cf0a
  getListarR39 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
  {- Arity: 1,
     Unfolding: (Database.Persist.Sql.Run.runSqlConn
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
                   Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                   Handlers.getListarR40
                     `cast`
                   (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                             <Database.Persist.Sql.Types.SqlBackend>_R
                             <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                             <[Database.Persist.Class.PersistEntity.Entity
                                 Foundation.Pessoa]>_N))) -}
067736db8af3eb20d48c25cde3efbdfe
  getListarR4 :: Yesod.Core.Types.RY Foundation.Sitio -> Text.Css.Css
  {- Arity: 1,
     Unfolding: (\ _render :: Yesod.Core.Types.RY Foundation.Sitio ->
                 Handlers.getListarR5) -}
18565fbf3fcee1f6d62487422cade0cc
  getListarR40 ::
    Database.Persist.Sql.Types.SqlBackend
    -> Yesod.Core.Types.HandlerT
         Foundation.Sitio
         GHC.Types.IO
         [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ r1 :: Database.Persist.Sql.Types.SqlBackend ->
                 let {
                   ds :: Yesod.Core.Types.HandlerT
                           Foundation.Sitio
                           GHC.Types.IO
                           (Data.Acquire.Internal.Acquire
                              (Data.Conduit.Internal.Conduit.Source
                                 GHC.Types.IO
                                 (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)))
                   = Handlers.getListarR_m1
                       `cast`
                     (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                          <Database.Persist.Sql.Types.SqlBackend>_R
                          <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                          <Data.Acquire.Internal.Acquire
                             (Data.Conduit.Internal.Conduit.Source
                                GHC.Types.IO
                                (Database.Persist.Class.PersistEntity.Entity
                                   Foundation.Pessoa))>_N)
                       r1
                 } in
                 (\ r :: Yesod.Core.Types.HandlerData
                           Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (ds
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             <Data.Acquire.Internal.Acquire
                                (Data.Conduit.Internal.Conduit.Source
                                   GHC.Types.IO
                                   (Database.Persist.Class.PersistEntity.Entity
                                      Foundation.Pessoa))>_N)
                          r)
                         `cast`
                       (GHC.Types.NTCo:IO[0]
                            <Data.Acquire.Internal.Acquire
                               (Data.Conduit.Internal.Conduit.Source
                                  GHC.Types.IO
                                  (Database.Persist.Class.PersistEntity.Entity
                                     Foundation.Pessoa))>_R)
                         s of ds1 { (#,#) ipv ipv1 ->
                  (Data.Acquire.Internal.with
                     @ (Data.Conduit.Internal.Conduit.Source
                          GHC.Types.IO
                          (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa))
                     @ GHC.Types.IO
                     @ [Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa]
                     Control.Monad.Trans.Control.$fMonadBaseControlIOIO
                     ipv1
                     (Database.Persist.Class.PersistQuery.selectList1
                        @ Foundation.Pessoa)
                       `cast`
                     (<Data.Conduit.Internal.Conduit.Source
                         GHC.Types.IO
                         (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0]
                                    <[Database.Persist.Class.PersistEntity.Entity
                                        Foundation.Pessoa]>_R)))
                    `cast`
                  (GHC.Types.NTCo:IO[0]
                       <[Database.Persist.Class.PersistEntity.Entity
                           Foundation.Pessoa]>_R)
                    ipv })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                     <[Database.Persist.Class.PersistEntity.Entity
                                         Foundation.Pessoa]>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <[Database.Persist.Class.PersistEntity.Entity
                                    Foundation.Pessoa]>_N)))) -}
0a27e330c7184de036460ec4bf9f09f3
  getListarR41 ::
    [Database.Persist.Class.PersistEntity.SelectOpt Foundation.Pessoa]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Database.Persist.Class.PersistEntity.SelectOpt
                        Foundation.Pessoa)
                   Handlers.getListarR42
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.SelectOpt
                           Foundation.Pessoa))) -}
1f406d72d7eceda801cfada3a2ac33c0
  getListarR42 ::
    Database.Persist.Class.PersistEntity.SelectOpt Foundation.Pessoa
  {- HasNoCafRefs,
     Unfolding: (Database.Persist.Class.PersistEntity.Asc
                   @ Foundation.Pessoa
                   @ Data.Text.Internal.Text
                   Handlers.getListarR43
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:EntityFieldPessoatyp[0])) <Data.Text.Internal.Text>_N)) -}
3e55e5b8b017b3e88f31e2fd8157d947
  getListarR43 ::
    Foundation.R:EntityFieldPessoatyp Data.Text.Internal.Text
  {- HasNoCafRefs,
     Unfolding: (Foundation.PessoaNome
                   @ Data.Text.Internal.Text
                   @~ <Data.Text.Internal.Text>_N) -}
38daae38fb9db50eab7ffc321256781e
  getListarR44 ::
    [Database.Persist.Class.PersistEntity.Filter Foundation.Pessoa]
    -> [Database.Persist.Class.PersistEntity.SelectOpt
          Foundation.Pessoa]
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Data.Acquire.Internal.Acquire
            (Data.Conduit.Internal.Conduit.Source
               GHC.Types.IO
               (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)))
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistQuery.$w$cselectSourceRes
                   @ Foundation.Pessoa
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ GHC.Types.IO
                   Foundation.$fPersistEntityPessoa
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Control.Monad.IO.Class.$fMonadIOIO) -}
11d82913e6ac987bfa80d2a1c9575a45
  getListarR5 :: Text.Css.Css
  {- Strictness: m2,
     Unfolding: (Text.Css.CssNoWhitespace Handlers.getListarR6) -}
e8c6f28957a36d6075ce1b9c5fdf92c4
  getListarR6 :: [Text.Css.TopLevel Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.TopLevel Text.Css.Resolved)
                   Handlers.getListarR24
                   Handlers.getListarR7) -}
b2f6cebbcb28793c42551c6316f2b1e1
  getListarR7 :: [Text.Css.TopLevel Text.Css.Resolved]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Text.Css.TopLevel Text.Css.Resolved)
                   Handlers.getListarR8
                   (GHC.Types.[] @ (Text.Css.TopLevel Text.Css.Resolved))) -}
a0671f48bdc8826ad02fe39de0c11682
  getListarR8 :: Text.Css.TopLevel Text.Css.Resolved
  {- Strictness: m1,
     Unfolding: (Text.Css.TopBlock
                   @ Text.Css.Resolved
                   Handlers.getListarR9) -}
de17f7d023ddd7299d44324c80569779
  getListarR9 :: Text.Css.Block Text.Css.Resolved
  {- Strictness: m,
     Unfolding: (Text.Css.Block
                   @ Text.Css.Resolved
                   Handlers.getListarR22
                     `cast`
                   (Trans
                        (forall s.
                         <Data.Text.Internal.Builder.Buffer s
                          -> GHC.ST.ST s [Data.Text.Internal.Text]>_R
                         ->_R <Data.Text.Internal.Builder.Buffer s>_R
                         ->_R Sym (GHC.ST.NTCo:ST[0] <s>_N <[Data.Text.Internal.Text]>_R))
                        (Trans
                             (Sym (Data.Text.Internal.Builder.NTCo:Builder[0]))
                             (Sub (Sym (Text.Css.TFCo:R:SelectorResolved[0])))))
                   Handlers.getListarR10
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:ChildBlocksResolved[0])))
                   GHC.Tuple.()
                     `cast`
                   (Sub (Sym (Text.Css.TFCo:R:MixinsResolved[0])))) -}
34f5fb8ced37e52f20e21b376a3e50fe
  getListarR_m1 ::
    Control.Monad.Trans.Reader.ReaderT
      Database.Persist.Sql.Types.SqlBackend
      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
      (Data.Acquire.Internal.Acquire
         (Data.Conduit.Internal.Conduit.Source
            GHC.Types.IO
            (Database.Persist.Class.PersistEntity.Entity Foundation.Pessoa)))
  {- Unfolding: (Handlers.getListarR44
                   (GHC.Types.[]
                      @ (Database.Persist.Class.PersistEntity.Filter Foundation.Pessoa))
                   Handlers.getListarR41) -}
3bee2a870ac9011f5e112de21eb40946
  getListarR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.getListarR35) -}
01398b25d6c13eb77011c9d08beb69bd
  getPessoaR ::
    Foundation.PessoaId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U> -}
8e9098f83bd1a2c815204d8752898f87
  postCadastroR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postCadastroR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
4d4e7c7a2eb6aadbd3bee8b8763c5e1a
  postCadastroR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postCadastroR15
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Pessoa,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Pessoa,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postCadastroR14
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess pessoa
                   -> case (Foundation.$fYesodPersistSitio8
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Sitio>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistSitio7
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoa)
                             (case ipv3 of wild3 { Foundation.Sitio ds5 -> ds5 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key Foundation.Pessoa)
                                Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                                (Handlers.postCadastroR13 pessoa))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             a66 :: Data.Text.Internal.Text
                             = case pessoa of wild3 { Foundation.Pessoa ds6 dt dt1 ds7 -> ds6 }
                           } in
                           let {
                             a67 :: Text.Blaze.Internal.ChoiceString
                             = Text.Blaze.Internal.Text a66
                           } in
                           let {
                             x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a67
                           } in
                           let {
                             a68 :: Yesod.Core.Types.RY Foundation.Sitio -> Text.Blaze.Html.Html
                               {- Arity: 1 -}
                             = \ ds6 :: Yesod.Core.Types.RY Foundation.Sitio -> x13
                           } in
                           let {
                             a69 :: Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.Sitio)
                             = Yesod.Core.Types.GWData
                                 @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                 a68
                                   `cast`
                                 (Sym (Yesod.Core.Types.NTCo:Body[0]
                                           <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                 (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                   `cast`
                                 (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                 (GHC.Base.id
                                    @ [Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Sitio)])
                                   `cast`
                                 (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                           <Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                 (GHC.Base.id
                                    @ [Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Sitio)])
                                   `cast`
                                 (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                           <Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                 (Data.Map.Base.Tip
                                    @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                    @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                        -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                        -> Data.Text.Internal.Text)
                                       -> Data.Text.Internal.Builder.Builder))
                                 (GHC.Base.Nothing
                                    @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                        -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                        -> Data.Text.Internal.Text)
                                       -> Text.Julius.Javascript))
                                 (Yesod.Core.Types.$fApplicativeWidgetT2
                                    @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                   `cast`
                                 (Sym (Yesod.Core.Types.NTCo:Head[0]
                                           <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                           } in
                           let {
                             lvl73 :: ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route
                                            (Yesod.Core.Class.Handler.HandlerSite
                                               (Yesod.Core.Types.WidgetT
                                                  Foundation.Sitio GHC.Types.IO))))
                             = (GHC.Tuple.(),
                                a69
                                  `cast`
                                (Yesod.Core.Types.GWData
                                   (Yesod.Routes.Class.Route
                                      (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)
                           } in
                           let {
                             a70 :: Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                    -> GHC.Prim.State# GHC.Prim.RealWorld
                                    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((),
                                           Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.HandlerSite
                                                   (Yesod.Core.Types.WidgetT
                                                      Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A><L,U>,
                                  Unfolding: InlineRule (2, True, False)
                                             (\ eta :: Yesod.Core.Types.HandlerData
                                                         Foundation.Sitio
                                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                                eta1 :: GHC.Prim.State#
                                                          GHC.Prim.RealWorld[OneShot] ->
                                              (# eta1,
                                                 (GHC.Tuple.(),
                                                  (Yesod.Core.Types.GWData
                                                     @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                                     (\ ds6 :: Yesod.Core.Types.RY
                                                                 Foundation.Sitio ->
                                                      x13)
                                                       `cast`
                                                     (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                               <Yesod.Routes.Class.Route
                                                                  Foundation.Sitio>_R))
                                                     (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                       `cast`
                                                     (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                     (GHC.Base.id
                                                        @ [Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Sitio)])
                                                       `cast`
                                                     (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                               <Yesod.Core.Types.Script
                                                                  (Yesod.Routes.Class.Route
                                                                     Foundation.Sitio)>_R))
                                                     (GHC.Base.id
                                                        @ [Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Sitio)])
                                                       `cast`
                                                     (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                               <Yesod.Core.Types.Stylesheet
                                                                  (Yesod.Routes.Class.Route
                                                                     Foundation.Sitio)>_R))
                                                     (Data.Map.Base.Tip
                                                        @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                        @ ((Yesod.Routes.Class.Route
                                                              Foundation.Sitio
                                                            -> [(Data.Text.Internal.Text,
                                                                 Data.Text.Internal.Text)]
                                                            -> Data.Text.Internal.Text)
                                                           -> Data.Text.Internal.Builder.Builder))
                                                     (GHC.Base.Nothing
                                                        @ ((Yesod.Routes.Class.Route
                                                              Foundation.Sitio
                                                            -> [(Data.Text.Internal.Text,
                                                                 Data.Text.Internal.Text)]
                                                            -> Data.Text.Internal.Text)
                                                           -> Text.Julius.Javascript))
                                                     (Yesod.Core.Types.$fApplicativeWidgetT2
                                                        @ (Yesod.Routes.Class.Route
                                                             Foundation.Sitio))
                                                       `cast`
                                                     (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                               <Yesod.Routes.Class.Route
                                                                  Foundation.Sitio>_R)))
                                                    `cast`
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Sitio>_N
                                                                  <GHC.Types.IO>_N)))_R)_R) #)) -}
                             = \ eta :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                               (# eta1, lvl73 #)
                           } in
                           let {
                             lvl74 :: ()
                                      -> Yesod.Core.Types.HandlerData
                                           Foundation.Sitio
                                           (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                      -> GHC.Types.IO
                                           ((),
                                            Yesod.Core.Types.GWData
                                              (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ ds6 :: ()
                                 eta :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                               Yesod.Core.Types.$wa1
                                 @ Foundation.Sitio
                                 @ GHC.Types.IO
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 a70
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Sitio>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postCadastroR6
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.NTCo:IO[0]
                                                          ((<()>_R,
                                                            (Yesod.Core.Types.GWData
                                                               (Yesod.Routes.Class.Route
                                                                  (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                            <Foundation.Sitio>_N
                                                                            <GHC.Types.IO>_N)))_R)_R))_R))
                                           (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta
                           } in
                           (\ eta :: Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                            Yesod.Core.Types.$wa1
                              @ Foundation.Sitio
                              @ GHC.Types.IO
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.postCadastroR2
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.NTCo:IO[0]
                                                  ((<()>_R,
                                                    (Yesod.Core.Types.GWData
                                                       (Yesod.Routes.Class.Route
                                                          (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Sitio>_N
                                                                    <GHC.Types.IO>_N)))_R)_R))_R))
                                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl74
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta)
                             `cast`
                           (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
c888b4db1bedb78464dc81a6f8168a87
  postCadastroR10 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.postCadastroR11) -}
bd17397a553ce9ce7c192d635640758f
  postCadastroR11 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.postCadastroR12) -}
6502d06c4141d66b353e8233bebdb4cb
  postCadastroR12 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   " Inseridx com sucesso. </h1>\n"#) -}
fc50346f687442ccaec647a7e4775db0
  postCadastroR13 ::
    Foundation.Pessoa
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Pessoa)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Pessoa
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityPessoa) -}
a3056ed212532d42ed2eac82aafe2060
  postCadastroR14 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.CadastroR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteSitio[0])))) -}
75e940bdaf72e78bea4d7bdeca32080b
  postCadastroR15 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Pessoa,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Pessoa
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Handlers.formPessoa1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite
                                      (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO),
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Pessoa>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
6599520e171d7e1c7be2b3126f9dee5a
  postCadastroR2 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 2, Strictness: <L,A><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta1 :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta,
                    (GHC.Tuple.(),
                     (Yesod.Core.Types.GWData
                        @ (Yesod.Routes.Class.Route Foundation.Sitio)
                        (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                         Handlers.postCadastroR_x)
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Body[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                        (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                          `cast`
                        (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Script
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (GHC.Base.id
                           @ [Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)])
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                  <Yesod.Core.Types.Stylesheet
                                     (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                        (Data.Map.Base.Tip
                           @ (GHC.Base.Maybe Data.Text.Internal.Text)
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Data.Text.Internal.Builder.Builder))
                        (GHC.Base.Nothing
                           @ ((Yesod.Routes.Class.Route Foundation.Sitio
                               -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                               -> Data.Text.Internal.Text)
                              -> Text.Julius.Javascript))
                        (Yesod.Core.Types.$fApplicativeWidgetT2
                           @ (Yesod.Routes.Class.Route Foundation.Sitio))
                          `cast`
                        (Sym (Yesod.Core.Types.NTCo:Head[0]
                                  <Yesod.Routes.Class.Route Foundation.Sitio>_R)))
                       `cast`
                     (Yesod.Core.Types.GWData
                        (Yesod.Routes.Class.Route
                           (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R) #)) -}
5d625053c4ef66a9856f5dfe91adfdd9
  postCadastroR3 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped
                   Handlers.postCadastroR4) -}
d729bdec30098c64fd5913098c6ea19d
  postCadastroR4 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.postCadastroR5) -}
718e61d185a260fa6624f715b88127a5
  postCadastroR5 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "<h1> "#) -}
4fde62b2662c20c216cd6ad60fb72449
  postCadastroR6 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta1, Handlers.postCadastroR7 #)) -}
facae992f5790dee41a899a371096566
  postCadastroR7 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.postCadastroR8
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)) -}
d2e6367165726fe5e2ad009270cad913
  postCadastroR8 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.postCadastroR9
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
9b35d1ef528e48406a47f36135c06d92
  postCadastroR9 ::
    Yesod.Core.Types.RY Foundation.Sitio -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                 Handlers.postCadastroR_x1) -}
10a62e53b2947b53669d3327269be9a3
  postCadastroR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postCadastroR3) -}
665988e0523bc7d89b33e825606ac0f6
  postCadastroR_x1 :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postCadastroR10) -}
0695eb960d5fd0f553124c2fd80ed3de
  postDeptoR :: Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.postDeptoR1
                  `cast`
                (Trans
                     (<Yesod.Core.Types.HandlerData
                         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                      ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                     (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                               <Foundation.Sitio>_N
                               <GHC.Types.IO>_N
                               <Text.Blaze.Html.Html>_N))) -}
e74b7fa015c1d9fbbe53e89dc953b859
  postDeptoR1 ::
    Yesod.Core.Types.HandlerData
      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Text.Blaze.Html.Html #)
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ r :: Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                   s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Handlers.postDeptoR11
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N
                            <GHC.Types.IO>_N
                            <((Yesod.Form.Types.FormResult Foundation.Departamento,
                               Foundation.Widget),
                              Yesod.Form.Types.Enctype)>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <((Yesod.Form.Types.FormResult Foundation.Departamento,
                              Foundation.Widget),
                             Yesod.Form.Types.Enctype)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) ds ds2 ->
                 case ds of wild1 { (,) result ds3 ->
                 case result of wild2 {
                   DEFAULT
                   -> (Handlers.postDeptoR10
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv
                   Yesod.Form.Types.FormSuccess depto
                   -> case (Foundation.$fYesodPersistSitio8
                              `cast`
                            (Yesod.Core.Types.NTCo:HandlerT[0]
                                 <Foundation.Sitio>_N
                                 <GHC.Types.IO>_N
                                 (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                      <Foundation.Sitio>_N <GHC.Types.IO>_N))
                              r)
                             `cast`
                           (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                             ipv of ds4 { (#,#) ipv2 ipv3 ->
                      case Foundation.$fYesodPersistSitio7
                             @ Database.Persist.Sql.Types.SqlBackend
                             @ (Database.Persist.Class.PersistEntity.Key
                                  Foundation.Departamento)
                             (case ipv3 of wild3 { Foundation.Sitio ds5 -> ds5 })
                             (Database.Persist.Sql.Run.runSqlConn
                                @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                                @ (Database.Persist.Class.PersistEntity.Key
                                     Foundation.Departamento)
                                Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                                (Handlers.postDeptoR9 depto))
                             r
                             ipv2 of ds5 { (#,#) ipv4 ipv5 ->
                      ((Foundation.$fYesodSitio_$cdefaultLayout
                          (let {
                             a66 :: Data.Text.Internal.Text
                             = case depto of wild3 { Foundation.Departamento ds6 ds7 -> ds6 }
                           } in
                           let {
                             a67 :: Text.Blaze.Internal.ChoiceString
                             = Text.Blaze.Internal.Text a66
                           } in
                           let {
                             x13 :: Text.Blaze.Html.Html = Text.Blaze.Internal.Content @ () a67
                           } in
                           let {
                             a68 :: Yesod.Core.Types.RY Foundation.Sitio -> Text.Blaze.Html.Html
                               {- Arity: 1 -}
                             = \ ds6 :: Yesod.Core.Types.RY Foundation.Sitio -> x13
                           } in
                           let {
                             a69 :: Yesod.Core.Types.GWData
                                      (Yesod.Routes.Class.Route Foundation.Sitio)
                             = Yesod.Core.Types.GWData
                                 @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                 a68
                                   `cast`
                                 (Sym (Yesod.Core.Types.NTCo:Body[0]
                                           <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                                 (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                   `cast`
                                 (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                 (GHC.Base.id
                                    @ [Yesod.Core.Types.Script
                                         (Yesod.Routes.Class.Route Foundation.Sitio)])
                                   `cast`
                                 (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                           <Yesod.Core.Types.Script
                                              (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                 (GHC.Base.id
                                    @ [Yesod.Core.Types.Stylesheet
                                         (Yesod.Routes.Class.Route Foundation.Sitio)])
                                   `cast`
                                 (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                           <Yesod.Core.Types.Stylesheet
                                              (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                                 (Data.Map.Base.Tip
                                    @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                    @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                        -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                        -> Data.Text.Internal.Text)
                                       -> Data.Text.Internal.Builder.Builder))
                                 (GHC.Base.Nothing
                                    @ ((Yesod.Routes.Class.Route Foundation.Sitio
                                        -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                                        -> Data.Text.Internal.Text)
                                       -> Text.Julius.Javascript))
                                 (Yesod.Core.Types.$fApplicativeWidgetT2
                                    @ (Yesod.Routes.Class.Route Foundation.Sitio))
                                   `cast`
                                 (Sym (Yesod.Core.Types.NTCo:Head[0]
                                           <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                           } in
                           let {
                             lvl73 :: ((),
                                       Yesod.Core.Types.GWData
                                         (Yesod.Routes.Class.Route
                                            (Yesod.Core.Class.Handler.HandlerSite
                                               (Yesod.Core.Types.WidgetT
                                                  Foundation.Sitio GHC.Types.IO))))
                             = (GHC.Tuple.(),
                                a69
                                  `cast`
                                (Yesod.Core.Types.GWData
                                   (Yesod.Routes.Class.Route
                                      (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)
                           } in
                           let {
                             a70 :: Yesod.Core.Types.HandlerData
                                      Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                    -> GHC.Prim.State# GHC.Prim.RealWorld
                                    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((),
                                           Yesod.Core.Types.GWData
                                             (Yesod.Routes.Class.Route
                                                (Yesod.Core.Class.Handler.HandlerSite
                                                   (Yesod.Core.Types.WidgetT
                                                      Foundation.Sitio GHC.Types.IO)))) #)
                               {- Arity: 2, Strictness: <L,A><L,U>,
                                  Unfolding: InlineRule (2, True, False)
                                             (\ eta :: Yesod.Core.Types.HandlerData
                                                         Foundation.Sitio
                                                         (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                                eta1 :: GHC.Prim.State#
                                                          GHC.Prim.RealWorld[OneShot] ->
                                              (# eta1,
                                                 (GHC.Tuple.(),
                                                  (Yesod.Core.Types.GWData
                                                     @ (Yesod.Routes.Class.Route Foundation.Sitio)
                                                     (\ ds6 :: Yesod.Core.Types.RY
                                                                 Foundation.Sitio ->
                                                      x13)
                                                       `cast`
                                                     (Sym (Yesod.Core.Types.NTCo:Body[0]
                                                               <Yesod.Routes.Class.Route
                                                                  Foundation.Sitio>_R))
                                                     (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                                                       `cast`
                                                     (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                                                     (GHC.Base.id
                                                        @ [Yesod.Core.Types.Script
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Sitio)])
                                                       `cast`
                                                     (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                               <Yesod.Core.Types.Script
                                                                  (Yesod.Routes.Class.Route
                                                                     Foundation.Sitio)>_R))
                                                     (GHC.Base.id
                                                        @ [Yesod.Core.Types.Stylesheet
                                                             (Yesod.Routes.Class.Route
                                                                Foundation.Sitio)])
                                                       `cast`
                                                     (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                                                               <Yesod.Core.Types.Stylesheet
                                                                  (Yesod.Routes.Class.Route
                                                                     Foundation.Sitio)>_R))
                                                     (Data.Map.Base.Tip
                                                        @ (GHC.Base.Maybe Data.Text.Internal.Text)
                                                        @ ((Yesod.Routes.Class.Route
                                                              Foundation.Sitio
                                                            -> [(Data.Text.Internal.Text,
                                                                 Data.Text.Internal.Text)]
                                                            -> Data.Text.Internal.Text)
                                                           -> Data.Text.Internal.Builder.Builder))
                                                     (GHC.Base.Nothing
                                                        @ ((Yesod.Routes.Class.Route
                                                              Foundation.Sitio
                                                            -> [(Data.Text.Internal.Text,
                                                                 Data.Text.Internal.Text)]
                                                            -> Data.Text.Internal.Text)
                                                           -> Text.Julius.Javascript))
                                                     (Yesod.Core.Types.$fApplicativeWidgetT2
                                                        @ (Yesod.Routes.Class.Route
                                                             Foundation.Sitio))
                                                       `cast`
                                                     (Sym (Yesod.Core.Types.NTCo:Head[0]
                                                               <Yesod.Routes.Class.Route
                                                                  Foundation.Sitio>_R)))
                                                    `cast`
                                                  (Yesod.Core.Types.GWData
                                                     (Yesod.Routes.Class.Route
                                                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                  <Foundation.Sitio>_N
                                                                  <GHC.Types.IO>_N)))_R)_R) #)) -}
                             = \ eta :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                 eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                               (# eta1, lvl73 #)
                           } in
                           let {
                             lvl74 :: ()
                                      -> Yesod.Core.Types.HandlerData
                                           Foundation.Sitio
                                           (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                                      -> GHC.Types.IO
                                           ((),
                                            Yesod.Core.Types.GWData
                                              (Yesod.Routes.Class.Route Foundation.Sitio))
                               {- Arity: 2 -}
                             = \ ds6 :: ()
                                 eta :: Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot] ->
                               Yesod.Core.Types.$wa1
                                 @ Foundation.Sitio
                                 @ GHC.Types.IO
                                 GHC.Base.$fMonadIO
                                 @ ()
                                 @ ()
                                 a70
                                   `cast`
                                 (Trans
                                      (<Yesod.Core.Types.HandlerData
                                          Foundation.Sitio
                                          (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                       ->_R Sym (GHC.Types.NTCo:IO[0]
                                                     ((<()>_R,
                                                       (Yesod.Core.Types.GWData
                                                          (Yesod.Routes.Class.Route
                                                             (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                       <Foundation.Sitio>_N
                                                                       <GHC.Types.IO>_N)))_R)_R))_R))
                                      (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 Handlers.postDeptoR2
                                   `cast`
                                 (<()>_R
                                  ->_R Trans
                                           (<Yesod.Core.Types.HandlerData
                                               Foundation.Sitio
                                               (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                            ->_R Sym (GHC.Types.NTCo:IO[0]
                                                          ((<()>_R,
                                                            (Yesod.Core.Types.GWData
                                                               (Yesod.Routes.Class.Route
                                                                  (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                            <Foundation.Sitio>_N
                                                                            <GHC.Types.IO>_N)))_R)_R))_R))
                                           (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                                 eta
                           } in
                           (\ eta :: Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO) ->
                            Yesod.Core.Types.$wa1
                              @ Foundation.Sitio
                              @ GHC.Types.IO
                              GHC.Base.$fMonadIO
                              @ ()
                              @ ()
                              Handlers.postCadastroR2
                                `cast`
                              (Trans
                                   (<Yesod.Core.Types.HandlerData
                                       Foundation.Sitio
                                       (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                                    ->_R Sym (GHC.Types.NTCo:IO[0]
                                                  ((<()>_R,
                                                    (Yesod.Core.Types.GWData
                                                       (Yesod.Routes.Class.Route
                                                          (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                                                    <Foundation.Sitio>_N
                                                                    <GHC.Types.IO>_N)))_R)_R))_R))
                                   (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)))
                              lvl74
                                `cast`
                              (<()>_R
                               ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                             <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))
                              eta)
                             `cast`
                           (Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                                     <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N))))
                         `cast`
                       (Yesod.Core.Types.NTCo:HandlerT[0]
                            <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                         r)
                        `cast`
                      (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                        ipv4 } } } } } }) -}
ed5ee22b89fb4cfc0f114d58bbfaca9d
  postDeptoR10 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.DeptoR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteSitio[0])))) -}
56be7cb1ae8b102b0b1c216f79f26f1a
  postDeptoR11 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio
      GHC.Types.IO
      ((Yesod.Form.Types.FormResult Foundation.Departamento,
        Foundation.Widget),
       Yesod.Form.Types.Enctype)
  {- Unfolding: (Yesod.Form.Functions.$wrunFormPost
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Foundation.Departamento
                   @ Foundation.Widget
                   Foundation.$fRenderMessageSitioFormMessage_$crenderMessage
                     `cast`
                   (Sym (Text.Shakespeare.I18N.NTCo:RenderMessage[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)
                             <Yesod.Form.Types.FormMessage>_N))
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   Handlers.formDepto1
                     `cast`
                   (<Text.Blaze.Internal.MarkupM ()>_R
                    ->_R Sym (Control.Monad.Trans.RWS.Lazy.NTCo:RWST[0]
                                  <(GHC.Base.Maybe (Yesod.Form.Types.Env, Yesod.Form.Types.FileEnv),
                                    Yesod.Core.Class.Handler.HandlerSite Foundation.Handler,
                                    [Text.Shakespeare.I18N.Lang])>_R
                                  <Yesod.Form.Types.Enctype>_N
                                  <Yesod.Form.Types.Ints>_N
                                  <Foundation.Handler>_R
                                  ((<Yesod.Form.Types.FormResult Foundation.Departamento>_N,
                                    (Yesod.Core.Types.WidgetT
                                       (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                                 <Foundation.Sitio>_N <GHC.Types.IO>_N))
                                       <GHC.Types.IO>_N
                                       <()>_N)_N))_N))) -}
3f032e4caf17c50f0eb5985d0659c215
  postDeptoR2 ::
    ()
    -> Yesod.Core.Types.HandlerData
         Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           Yesod.Core.Types.GWData
             (Yesod.Routes.Class.Route
                (Yesod.Core.Class.Handler.HandlerSite
                   (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO)))) #)
  {- Arity: 3,
     Unfolding: (\ ds :: ()
                   eta :: Yesod.Core.Types.HandlerData
                            Foundation.Sitio
                            (Yesod.Core.Types.MonadRoute GHC.Types.IO)[OneShot]
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 (# eta1, Handlers.postDeptoR3 #)) -}
81af03c1d2166285faf0f84bbb9758d4
  postDeptoR3 ::
    ((),
     Yesod.Core.Types.GWData
       (Yesod.Routes.Class.Route
          (Yesod.Core.Class.Handler.HandlerSite
             (Yesod.Core.Types.WidgetT Foundation.Sitio GHC.Types.IO))))
  {- Unfolding: ((GHC.Tuple.(),
                  Handlers.postDeptoR4
                    `cast`
                  (Yesod.Core.Types.GWData
                     (Yesod.Routes.Class.Route
                        (Sym (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteWidgetT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)))_R)_R)) -}
be5ebd48018eff6572d9309b3390d050
  postDeptoR4 ::
    Yesod.Core.Types.GWData (Yesod.Routes.Class.Route Foundation.Sitio)
  {- Unfolding: (Yesod.Core.Types.GWData
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   Handlers.postDeptoR5
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Body[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))
                   (GHC.Base.Nothing @ Yesod.Core.Types.Title)
                     `cast`
                   (Sym (Data.Monoid.NTCo:Last[0]) <Yesod.Core.Types.Title>_N)
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Script
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Script
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (GHC.Base.id
                      @ [Yesod.Core.Types.Stylesheet
                           (Yesod.Routes.Class.Route Foundation.Sitio)])
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:UniqueList[0]
                             <Yesod.Core.Types.Stylesheet
                                (Yesod.Routes.Class.Route Foundation.Sitio)>_R))
                   (Data.Map.Base.Tip
                      @ (GHC.Base.Maybe Data.Text.Internal.Text)
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Data.Text.Internal.Builder.Builder))
                   (GHC.Base.Nothing
                      @ ((Yesod.Routes.Class.Route Foundation.Sitio
                          -> [(Data.Text.Internal.Text, Data.Text.Internal.Text)]
                          -> Data.Text.Internal.Text)
                         -> Text.Julius.Javascript))
                   (Yesod.Core.Types.$fApplicativeWidgetT2
                      @ (Yesod.Routes.Class.Route Foundation.Sitio))
                     `cast`
                   (Sym (Yesod.Core.Types.NTCo:Head[0]
                             <Yesod.Routes.Class.Route Foundation.Sitio>_R))) -}
ab93f9485cfe078a2914fc233ad3e4cf
  postDeptoR5 ::
    Yesod.Core.Types.RY Foundation.Sitio -> Text.Blaze.Html.Html
  {- Arity: 1,
     Unfolding: (\ ds :: Yesod.Core.Types.RY Foundation.Sitio ->
                 Handlers.postDeptoR_x) -}
d60d6c4026ce80b64744e9d4cd4f2048
  postDeptoR6 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.PreEscaped Handlers.postDeptoR7) -}
556f2c4155227a27aa440ac1fb7b47fc
  postDeptoR7 :: Text.Blaze.Internal.ChoiceString
  {- Strictness: m3,
     Unfolding: (Text.Blaze.Internal.Text Handlers.postDeptoR8) -}
cfd3d37b371348c9a88c544262b60a60
  postDeptoR8 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString#
                   " Inserido com sucesso. </h1>\n"#) -}
9ddbe41faeb403a14bd74ee86b454f6e
  postDeptoR9 ::
    Foundation.Departamento
    -> Control.Monad.Trans.Reader.ReaderT
         Database.Persist.Sql.Types.SqlBackend
         (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
         (Database.Persist.Class.PersistEntity.Key Foundation.Departamento)
  {- Unfolding: (Database.Persist.Sql.Orphan.PersistStore.$w$cinsert
                   @ Foundation.Departamento
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                   Foundation.$fPersistEntityDepartamento) -}
99763c732ead01c851874194ff216d23
  postDeptoR_x :: Text.Blaze.Html.Html
  {- Strictness: m5,
     Unfolding: (Text.Blaze.Internal.Content
                   @ ()
                   Handlers.postDeptoR6) -}
9e0361eae0b7061ab17eafcc2ac62eda
  postPessoaR ::
    Foundation.PessoaId -> Foundation.Handler Text.Blaze.Html.Html
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ pid :: Foundation.PessoaId ->
                 let {
                   a66 :: Control.Monad.Trans.Reader.ReaderT
                            Database.Persist.Sql.Types.SqlBackend
                            (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                            ()
                   = Database.Persist.Sql.Orphan.PersistStore.$w$cdelete
                       @ Foundation.Pessoa
                       @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                       Foundation.$fYesodPersistSitio_$s$fMonadIOHandlerT
                       Foundation.$fPersistEntityPessoa
                       pid
                 } in
                 let {
                   lvl73 :: Database.Persist.Sql.Types.SqlBackend
                            -> Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO ()
                     {- Arity: 1 -}
                   = Database.Persist.Sql.Run.runSqlConn
                       @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                       @ ()
                       Foundation.$fYesodPersistSitio_$s$fMonadBaseControlbHandlerT
                       a66
                 } in
                 (\ eta :: Yesod.Core.Types.HandlerData
                             Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)
                    eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                  case (Foundation.$fYesodPersistSitio8
                          `cast`
                        (Yesod.Core.Types.NTCo:HandlerT[0]
                             <Foundation.Sitio>_N
                             <GHC.Types.IO>_N
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N))
                          eta)
                         `cast`
                       (GHC.Types.NTCo:IO[0] <Foundation.Sitio>_R)
                         eta1 of ds1 { (#,#) ipv ipv1 ->
                  case Foundation.$fYesodPersistSitio7
                         @ Database.Persist.Sql.Types.SqlBackend
                         @ ()
                         (case ipv1 of wild { Foundation.Sitio ds -> ds })
                         lvl73
                         eta
                         ipv of ds2 { (#,#) ipv2 ipv3 ->
                  (Handlers.postPessoaR1
                     `cast`
                   (Yesod.Core.Types.NTCo:HandlerT[0]
                        <Foundation.Sitio>_N <GHC.Types.IO>_N <Text.Blaze.Html.Html>_N)
                     eta)
                    `cast`
                  (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R)
                    ipv2 } })
                   `cast`
                 (Trans
                      (<Yesod.Core.Types.HandlerData
                          Foundation.Sitio (Yesod.Core.Types.MonadRoute GHC.Types.IO)>_R
                       ->_R Sym (GHC.Types.NTCo:IO[0] <Text.Blaze.Html.Html>_R))
                      (Sym (Yesod.Core.Types.NTCo:HandlerT[0]
                                <Foundation.Sitio>_N
                                <GHC.Types.IO>_N
                                <Text.Blaze.Html.Html>_N)))) -}
ca55908af6ddb39980f66673f6fa2d14
  postPessoaR1 ::
    Yesod.Core.Types.HandlerT
      Foundation.Sitio GHC.Types.IO Text.Blaze.Html.Html
  {- Unfolding: (Yesod.Core.Handler.redirect
                   @ (Yesod.Routes.Class.Route Foundation.Sitio)
                   @ (Yesod.Core.Types.HandlerT Foundation.Sitio GHC.Types.IO)
                   @ Text.Blaze.Html.Html
                   Foundation.$fYesodPersistSitio_$s$fMonadHandlerHandlerT
                   (Yesod.Core.Handler.$fRedirectUrlmasterRoute_$ctoTextUrl
                      @ Foundation.Sitio)
                     `cast`
                   (Sym (Yesod.Core.Handler.NTCo:RedirectUrl[0]
                             (Yesod.Core.Class.Handler.TFCo:R:HandlerSiteHandlerT[0]
                                  <Foundation.Sitio>_N <GHC.Types.IO>_N)
                             <Yesod.Routes.Class.Route Foundation.Sitio>_N))
                   Foundation.ListarR
                     `cast`
                   (Sub (Sym (Foundation.TFCo:R:RouteSitio[0])))) -}
c31620555ef2a497908aaf738f13d03a
  widgetForm ::
    Yesod.Routes.Class.Route Foundation.Sitio
    -> Yesod.Form.Types.Enctype
    -> Foundation.Widget
    -> Data.Text.Internal.Text
    -> Foundation.Widget
  {- Arity: 5, Strictness: <L,U><L,1*U><L,C(U)><L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Handlers.getCadastroR3
                  `cast`
                (<Yesod.Routes.Class.Route Foundation.Sitio>_R
                 ->_R <Yesod.Form.Types.Enctype>_R
                 ->_R <Foundation.Widget>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R Sym (Yesod.Core.Types.NTCo:WidgetT[0]
                               <Foundation.Sitio>_N <GHC.Types.IO>_N <()>_N)) -}
instance Yesod.Core.Class.Dispatch.YesodDispatch [Foundation.Sitio]
  = Handlers.$fYesodDispatchSitio
"SPEC/Handlers $fApplicativeWidgetT @ Sitio @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                 (Yesod.Core.Types.WidgetT
                                                                                    Foundation.Sitio
                                                                                    GHC.Types.IO)
                                                                  $dMonad :: GHC.Base.Monad
                                                                               GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT @ Foundation.Sitio
                                        @ GHC.Types.IO
                                        $dFunctor
                                        $dMonad
  = Handlers.$s$fApplicativeWidgetT
"SPEC/Handlers $fApplicativeWidgetT_$c*> @ Sitio @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Sitio
                                                                                         GHC.Types.IO)
                                                                       $dMonad :: GHC.Base.Monad
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c*> @ Foundation.Sitio
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c*>
"SPEC/Handlers $fApplicativeWidgetT_$c<* @ Sitio @ IO" [ALWAYS] forall $dFunctor :: GHC.Base.Functor
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Sitio
                                                                                         GHC.Types.IO)
                                                                       $dMonad :: GHC.Base.Monad
                                                                                    GHC.Types.IO
  Yesod.Core.Types.$fApplicativeWidgetT_$c<* @ Foundation.Sitio
                                             @ GHC.Types.IO
                                             $dFunctor
                                             $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fApplicativeWidgetT_$c<*
"SPEC/Handlers $fMonadBasebWidgetT @ IO @ Sitio @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                         GHC.Types.IO
                                                                      $dApplicative1 :: GHC.Base.Applicative
                                                                                          (Yesod.Core.Types.WidgetT
                                                                                             Foundation.Sitio
                                                                                             GHC.Types.IO)
                                                                      $dMonad :: GHC.Base.Monad
                                                                                   GHC.Types.IO
                                                                      $dMonad1 :: GHC.Base.Monad
                                                                                    (Yesod.Core.Types.WidgetT
                                                                                       Foundation.Sitio
                                                                                       GHC.Types.IO)
                                                                      $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                       GHC.Types.IO
                                                                                       GHC.Types.IO
  Yesod.Core.Types.$fMonadBasebWidgetT @ GHC.Types.IO
                                       @ Foundation.Sitio
                                       @ GHC.Types.IO
                                       $dApplicative
                                       $dApplicative1
                                       $dMonad
                                       $dMonad1
                                       $dMonadBase
  = Handlers.$s$fMonadBasebWidgetT
"SPEC/Handlers $fMonadHandlerWidgetT @ Sitio @ IO" [ALWAYS] forall $dMonadResource :: Control.Monad.Trans.Resource.Internal.MonadResource
                                                                                        (Yesod.Core.Types.WidgetT
                                                                                           Foundation.Sitio
                                                                                           GHC.Types.IO)
                                                                   tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                            GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadHandlerWidgetT @ Foundation.Sitio
                                                 @ GHC.Types.IO
                                                 $dMonadResource
                                                 tup
  = Handlers.$s$fMonadHandlerWidgetT
"SPEC/Handlers $fMonadIOWidgetT @ Sitio @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                           (Yesod.Core.Types.WidgetT
                                                                              Foundation.Sitio
                                                                              GHC.Types.IO)
                                                              $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                             GHC.Types.IO
  Yesod.Core.Types.$fMonadIOWidgetT @ Foundation.Sitio
                                    @ GHC.Types.IO
                                    $dMonad
                                    $dMonadIO
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadIOWidgetT
"SPEC/Handlers $fMonadResourceWidgetT @ Sitio @ IO" [ALWAYS] forall $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Sitio
                                                                                         GHC.Types.IO)
                                                                    $dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                   (Yesod.Core.Types.WidgetT
                                                                                      Foundation.Sitio
                                                                                      GHC.Types.IO)
                                                                    $dApplicative :: GHC.Base.Applicative
                                                                                       (Yesod.Core.Types.WidgetT
                                                                                          Foundation.Sitio
                                                                                          GHC.Types.IO)
                                                                    $dMonadBase :: Control.Monad.Base.MonadBase
                                                                                     GHC.Types.IO
                                                                                     (Yesod.Core.Types.WidgetT
                                                                                        Foundation.Sitio
                                                                                        GHC.Types.IO)
                                                                    $dApplicative1 :: GHC.Base.Applicative
                                                                                        GHC.Types.IO
                                                                    $dMonadIO1 :: Control.Monad.IO.Class.MonadIO
                                                                                    GHC.Types.IO
                                                                    $dMonadBase1 :: Control.Monad.Base.MonadBase
                                                                                      GHC.Types.IO
                                                                                      GHC.Types.IO
                                                                    $dMonadThrow1 :: Control.Monad.Catch.MonadThrow
                                                                                       GHC.Types.IO
  Yesod.Core.Types.$fMonadResourceWidgetT @ Foundation.Sitio
                                          @ GHC.Types.IO
                                          $dMonadThrow
                                          $dMonadIO
                                          $dApplicative
                                          $dMonadBase
                                          $dApplicative1
                                          $dMonadIO1
                                          $dMonadBase1
                                          $dMonadThrow1
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadResourceWidgetT
"SPEC/Handlers $fMonadThrowWidgetT @ Sitio @ IO" [ALWAYS] forall $dMonad :: GHC.Base.Monad
                                                                              (Yesod.Core.Types.WidgetT
                                                                                 Foundation.Sitio
                                                                                 GHC.Types.IO)
                                                                 $dMonadThrow :: Control.Monad.Catch.MonadThrow
                                                                                   GHC.Types.IO
  Yesod.Core.Types.$fMonadThrowWidgetT @ Foundation.Sitio
                                       @ GHC.Types.IO
                                       $dMonad
                                       $dMonadThrow
  = Handlers.$s$fMonadHandlerWidgetT_$s$fMonadThrowWidgetT
"SPEC/Handlers $fMonadWidgetT @ Sitio @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                               (Yesod.Core.Types.WidgetT
                                                                                  Foundation.Sitio
                                                                                  GHC.Types.IO)
                                                            $dMonad :: GHC.Base.Monad GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT @ Foundation.Sitio
                                  @ GHC.Types.IO
                                  $dApplicative
                                  $dMonad
  = Handlers.$s$fMonadBasebWidgetT_$s$fMonadWidgetT
"SPEC/Handlers $fMonadWidgetT_$creturn @ Sitio @ IO" [ALWAYS] forall $dApplicative :: GHC.Base.Applicative
                                                                                        (Yesod.Core.Types.WidgetT
                                                                                           Foundation.Sitio
                                                                                           GHC.Types.IO)
                                                                     $dMonad :: GHC.Base.Monad
                                                                                  GHC.Types.IO
  Yesod.Core.Types.$fMonadWidgetT_$creturn @ Foundation.Sitio
                                           @ GHC.Types.IO
                                           $dApplicative
                                           $dMonad
  = Handlers.$s$fApplicativeWidgetT_$s$fMonadWidgetT_$creturn
"SPEC/Handlers $fMonadWidgetWidgetT @ Sitio @ IO" [ALWAYS] forall $dMonadHandler :: Yesod.Core.Class.Handler.MonadHandler
                                                                                      (Yesod.Core.Types.WidgetT
                                                                                         Foundation.Sitio
                                                                                         GHC.Types.IO)
                                                                  tup :: Control.Monad.Trans.Resource.MonadResourceBase
                                                                           GHC.Types.IO
  Yesod.Core.Class.Handler.$fMonadWidgetWidgetT @ Foundation.Sitio
                                                @ GHC.Types.IO
                                                $dMonadHandler
                                                tup
  = Handlers.$s$fMonadWidgetWidgetT
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

